{
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Security audit by Find Security Bugs",
          "rules": [
            {
              "id": "CWE-78",
              "name": "Potential Command Injection",
              "helpUri": "https://cwe.mitre.org/data/definitions/78.html"
            },
            {
              "id": "CWE-117",
              "name": "Potential CRLF Injection for logs",
              "helpUri": "https://cwe.mitre.org/data/definitions/117.html"
            },
            {
              "id": "CWE-79",
              "name": "Potential XSS in Servlet",
              "helpUri": "https://cwe.mitre.org/data/definitions/79.html"
            },
            {
              "id": "CWE-259",
              "name": "Hard coded password",
              "helpUri": "https://cwe.mitre.org/data/definitions/259.html"
            },
            {
              "id": "CWE-22",
              "name": "Potential Path Traversal (file read)",
              "helpUri": "https://cwe.mitre.org/data/definitions/22.html"
            },
            {
              "id": "CWE-203",
              "name": "Unsafe hash equals",
              "helpUri": "https://cwe.mitre.org/data/definitions/203.html"
            },
            {
              "id": "CWE-352",
              "name": "Spring CSRF unrestricted RequestMapping",
              "helpUri": "https://cwe.mitre.org/data/definitions/352.html"
            },
            {
              "id": "SPRING_FILE_DISCLOSURE",
              "name": "Spring File Disclosure",
              "helpUri": "https://cwe.mitre.org/data/definitions/319.html"
            },
            {
              "id": "CWE-319",
              "name": "Unencrypted Socket",
              "helpUri": "https://cwe.mitre.org/data/definitions/319.html"
            },
            {
              "id": "CWE-89",
              "name": "Potential JDBC Injection",
              "helpUri": "https://cwe.mitre.org/data/definitions/89.html"
            },
            {
              "id": "CWE-330",
              "name": "Predictable pseudorandom number generator",
              "helpUri": "https://cwe.mitre.org/data/definitions/330.html"
            },
            {
              "id": "CWE-328",
              "name": "MD2, MD4 and MD5 are weak hash functions",
              "helpUri": "https://cwe.mitre.org/data/definitions/328.html"
            },
            {
              "id": "CWE-502",
              "name": "Object deserialization is used in {1}",
              "helpUri": "https://cwe.mitre.org/data/definitions/502.html"
            },
            {
              "id": "HTTPONLY_COOKIE",
              "name": "Cookie without the HttpOnly flag",
              "helpUri": "https://cwe.mitre.org/data/definitions/319.html"
            },
            {
              "id": "CWE-614",
              "name": "Cookie without the secure flag",
              "helpUri": "https://cwe.mitre.org/data/definitions/614.html"
            },
            {
              "id": "CWE-918",
              "name": "URLConnection Server-Side Request Forgery (SSRF) and File Disclosure",
              "helpUri": "https://cwe.mitre.org/data/definitions/918.html"
            },
            {
              "id": "CWE-611",
              "name": "XML parsing vulnerable to XXE (XMLStreamReader)",
              "helpUri": "https://cwe.mitre.org/data/definitions/611.html"
            },
            {
              "id": "CWE-915",
              "name": "Mass assignment",
              "helpUri": "https://cwe.mitre.org/data/definitions/915.html"
            }
          ]
        }
      },
      "conversion": {
        "tool": {
          "driver": {
            "name": "@AppThreat/sast-scan"
          }
        },
        "invocation": {
          "arguments": [
            "-jar",
            "/opt/spotbugs/lib/spotbugs.jar",
            "-textui",
            "-include",
            "/usr/local/src/spotbugs/include.xml",
            "-exclude",
            "/usr/local/src/spotbugs/exclude.xml",
            "-noClassOk",
            "-auxclasspathFromFile",
            "/tmp/tmpy_92tcut",
            "-sourcepath",
            "/app",
            "-quiet",
            "-medium",
            "-xml:withMessages",
            "-effort:max",
            "-nested:false",
            "-output",
            "/app/reports/findsecbugs-report.xml",
            "/app"
          ],
          "executionSuccessful": true,
          "commandLine": "-jar /opt/spotbugs/lib/spotbugs.jar -textui -include /usr/local/src/spotbugs/include.xml -exclude /usr/local/src/spotbugs/exclude.xml -noClassOk -auxclasspathFromFile /tmp/tmpy_92tcut -sourcepath /app -quiet -medium -xml:withMessages -effort:max -nested:false -output /app/reports/findsecbugs-report.xml /app",
          "endTimeUtc": "2022-02-27T10:43:19Z",
          "workingDirectory": {
            "uri": "file:///home/z10n0101/IdeaProjects/WebGoat"
          }
        }
      },
      "invocations": [
        {
          "executionSuccessful": true,
          "endTimeUtc": "2022-02-27T10:43:19Z",
          "workingDirectory": {
            "uri": "file:///home/z10n0101/IdeaProjects/WebGoat"
          }
        }
      ],
      "properties": {
        "metrics": {
          "total": 142,
          "critical": 31,
          "high": 111,
          "medium": 0,
          "low": 0
        }
      },
      "results": [
        {
          "message": {
            "text": "This usage of java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection \nAt VulnerableTaskHolder.java:[lines 12-71] \nIn class org.dummy.insecure.framework.VulnerableTaskHolder \nIn method org.dummy.insecure.framework.VulnerableTaskHolder.readObject(ObjectInputStream) \nAt VulnerableTaskHolder.java:[line 59] \nSink method java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; \nSink parameter 0 \nUnknown source org/dummy/insecure/framework/VulnerableTaskHolder.taskAction \nAt VulnerableTaskHolder.java:[line 59]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            Process p = Runtime.getRuntime().exec(taskAction);\n"
                  },
                  "startLine": 59
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/insecure-deserialization/src/main/java/org/dummy/insecure/framework/VulnerableTaskHolder.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\ttry {\n            Process p = Runtime.getRuntime().exec(taskAction);\n"
                  },
                  "endLine": 59,
                  "startLine": 58
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-78",
          "ruleIndex": 0
        },
        {
          "message": {
            "text": "This use of org/slf4j/Logger.info(Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt VulnerableTaskHolder.java:[lines 12-71] \nIn class org.dummy.insecure.framework.VulnerableTaskHolder \nIn method org.dummy.insecure.framework.VulnerableTaskHolder.readObject(ObjectInputStream) \nAt VulnerableTaskHolder.java:[line 64] \nSink method org/slf4j/Logger.info(Ljava/lang/String;)V \nSink parameter 0 \nTainted source java/io/BufferedReader.readLine()Ljava/lang/String; \nAt VulnerableTaskHolder.java:[line 63]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                log.info(line);\n"
                  },
                  "startLine": 64
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/insecure-deserialization/src/main/java/org/dummy/insecure/framework/VulnerableTaskHolder.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            while ((line = in.readLine()) != null) {\n                log.info(line);\n"
                  },
                  "endLine": 64,
                  "startLine": 63
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-117",
          "ruleIndex": 1
        },
        {
          "message": {
            "text": "This use of javax/servlet/http/HttpServletResponse.sendError(ILjava/lang/String;)V could be vulnerable to XSS in the Servlet \nAt AjaxAuthenticationEntryPoint.java:[lines 48-57] \nIn class org.owasp.webgoat.AjaxAuthenticationEntryPoint \nIn method org.owasp.webgoat.AjaxAuthenticationEntryPoint.commence(HttpServletRequest, HttpServletResponse, AuthenticationException) \nAt AjaxAuthenticationEntryPoint.java:[line 53] \nSink method javax/servlet/http/HttpServletResponse.sendError(ILjava/lang/String;)V \nSink parameter 0 \nUnknown source org/springframework/security/core/AuthenticationException.getMessage()Ljava/lang/String;."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            response.sendError(401, authException.getMessage());\n"
                  },
                  "startLine": 53
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-container/src/main/java/org/owasp/webgoat/AjaxAuthenticationEntryPoint.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        if (request.getHeader(\"x-requested-with\") != null) {\n            response.sendError(401, authException.getMessage());\n"
                  },
                  "endLine": 53,
                  "startLine": 52
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-79",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Hard coded password found \nAt CSRFTest.java:[lines 26-260] \nIn class org.owasp.webgoat.CSRFTest \nIn method org.owasp.webgoat.CSRFTest.checkAssignment8(String) \nAt CSRFTest.java:[line 190] \nSink method java/util/Map.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        params.put(\"password\", \"password\");\n"
                  },
                  "startLine": 190
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-integration-tests/src/test/java/org/owasp/webgoat/CSRFTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        params.put(\"username\", \"csrf-\" + getWebgoatUser());\n        params.put(\"password\", \"password\");\n"
                  },
                  "endLine": 190,
                  "startLine": 189
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-259",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "This API (java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;) reads a file whose location might be specified by user input \nAt CSRFTest.java:[lines 26-260] \nIn class org.owasp.webgoat.CSRFTest \nIn method org.owasp.webgoat.CSRFTest.uploadTrickHtml(String, String) \nAt CSRFTest.java:[line 88] \nSink method java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path; \nSink parameter 1 \nUnknown source org/owasp/webgoat/CSRFTest.webwolfFileDir \nAt CSRFTest.java:[line 88]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        Path webWolfFilePath = Paths.get(webwolfFileDir);\n"
                  },
                  "startLine": 88
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-integration-tests/src/test/java/org/owasp/webgoat/CSRFTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        //remove any left over html\n        Path webWolfFilePath = Paths.get(webwolfFileDir);\n"
                  },
                  "endLine": 88,
                  "startLine": 87
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-22",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "Hard coded password found \nAt ChallengeTest.java:[lines 17-112] \nIn class org.owasp.webgoat.ChallengeTest \nIn method org.owasp.webgoat.ChallengeTest.testChallenge5() \nAt ChallengeTest.java:[line 80] \nSink method java/util/Map.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        params.put(\"password_login\", \"1' or '1'='1\");\n"
                  },
                  "startLine": 80
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-integration-tests/src/test/java/org/owasp/webgoat/ChallengeTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        params.put(\"username_login\", \"Larry\");\n        params.put(\"password_login\", \"1' or '1'='1\");\n"
                  },
                  "endLine": 80,
                  "startLine": 79
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-259",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Hard coded password found \nAt CryptoTest.java:[lines 22-132] \nIn class org.owasp.webgoat.CryptoTest \nIn method org.owasp.webgoat.CryptoTest.checkAssignment3() \nAt CryptoTest.java:[line 72] \nSink method java/util/Map.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\tparams.put(\"answer_pwd1\", answer_1);\n"
                  },
                  "startLine": 72
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-integration-tests/src/test/java/org/owasp/webgoat/CryptoTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\tparams.clear();\n\t\tparams.put(\"answer_pwd1\", answer_1);\n"
                  },
                  "endLine": 72,
                  "startLine": 71
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-259",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Unsafe comparison of hash that are susceptible to timing attack \nAt CryptoTest.java:[lines 22-132] \nIn class org.owasp.webgoat.CryptoTest \nIn method org.owasp.webgoat.CryptoTest.checkAssignment4() \nAt CryptoTest.java:[line 87] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tif (md5Hash.equals(HashingAssignment.getHash(secret, \"MD5\"))) {\n"
                  },
                  "startLine": 87
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-integration-tests/src/test/java/org/owasp/webgoat/CryptoTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\tfor (String secret : HashingAssignment.SECRETS) {\n\t\t\tif (md5Hash.equals(HashingAssignment.getHash(secret, \"MD5\"))) {\n"
                  },
                  "endLine": 87,
                  "startLine": 86
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-203",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Unsafe comparison of hash that are susceptible to timing attack \nAt CryptoTest.java:[lines 22-132] \nIn class org.owasp.webgoat.CryptoTest \nIn method org.owasp.webgoat.CryptoTest.checkAssignment4() \nAt CryptoTest.java:[line 90] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tif (sha256Hash.equals(HashingAssignment.getHash(secret, \"SHA-256\"))) {\n"
                  },
                  "startLine": 90
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-integration-tests/src/test/java/org/owasp/webgoat/CryptoTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t}\n\t\t\tif (sha256Hash.equals(HashingAssignment.getHash(secret, \"SHA-256\"))) {\n"
                  },
                  "endLine": 90,
                  "startLine": 89
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-203",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Hard coded password found \nAt GeneralLessonTest.java:[lines 13-184] \nIn class org.owasp.webgoat.GeneralLessonTest \nIn method org.owasp.webgoat.GeneralLessonTest.insecureLogin() \nAt GeneralLessonTest.java:[line 92] \nSink method java/util/Map.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        params.put(\"password\", \"BlackPearl\");\n"
                  },
                  "startLine": 92
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-integration-tests/src/test/java/org/owasp/webgoat/GeneralLessonTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        params.put(\"username\", \"CaptainJack\");\n        params.put(\"password\", \"BlackPearl\");\n"
                  },
                  "endLine": 92,
                  "startLine": 91
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-259",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Hard coded password found \nAt GeneralLessonTest.java:[lines 13-184] \nIn class org.owasp.webgoat.GeneralLessonTest \nIn method org.owasp.webgoat.GeneralLessonTest.securePasswords() \nAt GeneralLessonTest.java:[line 102] \nSink method java/util/Map.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        params.put(\"password\", \"ajnaeliclm^&&@kjn.\");\n"
                  },
                  "startLine": 102
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-integration-tests/src/test/java/org/owasp/webgoat/GeneralLessonTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        params.clear();\n        params.put(\"password\", \"ajnaeliclm^&&@kjn.\");\n"
                  },
                  "endLine": 102,
                  "startLine": 101
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-259",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks \nAt HammerHead.java:[lines 49-59] \nIn class org.owasp.webgoat.HammerHead \nIn method org.owasp.webgoat.HammerHead.attack(Authentication, HttpServletRequest, HttpServletResponse) \nAt HammerHead.java:[line 59]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        return new ModelAndView(\"redirect:\" + \"start.mvc\" + course.getFirstLesson().getLink());\n"
                  },
                  "startLine": 59
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-container/src/main/java/org/owasp/webgoat/HammerHead.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    public ModelAndView attack(Authentication authentication, HttpServletRequest request, HttpServletResponse response) {\n        return new ModelAndView(\"redirect:\" + \"start.mvc\" + course.getFirstLesson().getLink());\n"
                  },
                  "endLine": 59,
                  "startLine": 58
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-352",
          "ruleIndex": 6
        },
        {
          "message": {
            "text": "ModelAndView populated with user controlled parameters \nAt HammerHead.java:[lines 49-59] \nIn class org.owasp.webgoat.HammerHead \nIn method org.owasp.webgoat.HammerHead.attack(Authentication, HttpServletRequest, HttpServletResponse) \nAt HammerHead.java:[line 59] \nSink method org/springframework/web/servlet/ModelAndView.<init>(Ljava/lang/String;)V \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        return new ModelAndView(\"redirect:\" + \"start.mvc\" + course.getFirstLesson().getLink());\n"
                  },
                  "startLine": 59
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-container/src/main/java/org/owasp/webgoat/HammerHead.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    public ModelAndView attack(Authentication authentication, HttpServletRequest request, HttpServletResponse response) {\n        return new ModelAndView(\"redirect:\" + \"start.mvc\" + course.getFirstLesson().getLink());\n"
                  },
                  "endLine": 59,
                  "startLine": 58
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "SPRING_FILE_DISCLOSURE",
          "ruleIndex": 7
        },
        {
          "message": {
            "text": "Hard coded password found \nAt IDORTest.java:[lines 22-96] \nIn class org.owasp.webgoat.IDORTest \nIn method org.owasp.webgoat.IDORTest.loginIDOR() \nAt IDORTest.java:[line 48] \nSink method java/util/Map.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        params.put(\"password\", \"cat\");\n"
                  },
                  "startLine": 48
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-integration-tests/src/test/java/org/owasp/webgoat/IDORTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        params.put(\"username\", \"tom\");\n        params.put(\"password\", \"cat\");\n"
                  },
                  "endLine": 48,
                  "startLine": 47
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-259",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Unencrypted socket to org.owasp.webgoat.IntegrationTest (instead of SSLSocket) \nAt IntegrationTest.java:[lines 22-313] \nIn class org.owasp.webgoat.IntegrationTest \nIn method org.owasp.webgoat.IntegrationTest.isAlreadyRunning(int) \nAt IntegrationTest.java:[line 73] \nValue 127.0.0.1."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        try (var ignored = new Socket(\"127.0.0.1\", port)) {\n"
                  },
                  "startLine": 73
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-integration-tests/src/test/java/org/owasp/webgoat/IntegrationTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    private static boolean isAlreadyRunning(int port) {\n        try (var ignored = new Socket(\"127.0.0.1\", port)) {\n"
                  },
                  "endLine": 73,
                  "startLine": 72
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-319",
          "ruleIndex": 8
        },
        {
          "message": {
            "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt PathTraversalITTest.java:[lines 27-136] \nIn class org.owasp.webgoat.PathTraversalITTest \nIn method org.owasp.webgoat.PathTraversalITTest.assignment5() \nAt PathTraversalITTest.java:[line 112] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nAt PathTraversalITTest.java:[line 110]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        var webGoatDirectory = new File(webGoatHome);\n"
                  },
                  "startLine": 112
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-integration-tests/src/test/java/org/owasp/webgoat/PathTraversalITTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n        var webGoatDirectory = new File(webGoatHome);\n"
                  },
                  "endLine": 112,
                  "startLine": 111
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-22",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "Hard coded password found \nAt SqlInjectionAdvancedTest.java:[lines 8-48] \nIn class org.owasp.webgoat.SqlInjectionAdvancedTest \nIn method org.owasp.webgoat.SqlInjectionAdvancedTest.runTests() \nAt SqlInjectionAdvancedTest.java:[line 17] \nSink method java/util/Map.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        params.put(\"password_reg\", \"password\");\n"
                  },
                  "startLine": 17
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-integration-tests/src/test/java/org/owasp/webgoat/SqlInjectionAdvancedTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        params.put(\"username_reg\", \"tom' AND substring(password,1,1)='t\");\n        params.put(\"password_reg\", \"password\");\n"
                  },
                  "endLine": 17,
                  "startLine": 16
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-259",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Hard coded password found \nAt SqlInjectionAdvancedTest.java:[lines 8-48] \nIn class org.owasp.webgoat.SqlInjectionAdvancedTest \nIn method org.owasp.webgoat.SqlInjectionAdvancedTest.runTests() \nAt SqlInjectionAdvancedTest.java:[line 19] \nSink method java/util/Map.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        params.put(\"confirm_password\", \"password\");\n"
                  },
                  "startLine": 19
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-integration-tests/src/test/java/org/owasp/webgoat/SqlInjectionAdvancedTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        params.put(\"email_reg\", \"someone@microsoft.com\");\n        params.put(\"confirm_password\", \"password\");\n"
                  },
                  "endLine": 19,
                  "startLine": 18
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-259",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Hard coded password found \nAt SqlInjectionAdvancedTest.java:[lines 8-48] \nIn class org.owasp.webgoat.SqlInjectionAdvancedTest \nIn method org.owasp.webgoat.SqlInjectionAdvancedTest.runTests() \nAt SqlInjectionAdvancedTest.java:[line 24] \nSink method java/util/Map.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        params.put(\"password_login\", \"thisisasecretfortomonly\");\n"
                  },
                  "startLine": 24
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-integration-tests/src/test/java/org/owasp/webgoat/SqlInjectionAdvancedTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        params.put(\"username_login\", \"tom\");\n        params.put(\"password_login\", \"thisisasecretfortomonly\");\n"
                  },
                  "endLine": 24,
                  "startLine": 23
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-259",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Unencrypted socket to org.owasp.webgoat.StartWebGoat (instead of SSLSocket) \nAt StartWebGoat.java:[lines 47-77] \nIn class org.owasp.webgoat.StartWebGoat \nIn method org.owasp.webgoat.StartWebGoat.isAlreadyRunning(String, int) \nAt StartWebGoat.java:[line 74] \nValue remote host."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        try (var ignored = new Socket(host, port)) {\n"
                  },
                  "startLine": 74
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-server/src/main/java/org/owasp/webgoat/StartWebGoat.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    private static boolean isAlreadyRunning(String host, int port) {\n        try (var ignored = new Socket(host, port)) {\n"
                  },
                  "endLine": 74,
                  "startLine": 73
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-319",
          "ruleIndex": 8
        },
        {
          "message": {
            "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt WebGoat.java:[lines 46-67] \nIn class org.owasp.webgoat.WebGoat \nIn method org.owasp.webgoat.WebGoat.pluginTargetDirectory(String) \nAt WebGoat.java:[line 50] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/owasp/webgoat/WebGoat.pluginTargetDirectory(Ljava/lang/String;)Ljava/io/File; parameter 0 \nMethod usage not detected."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        return new File(webgoatHome);\n"
                  },
                  "startLine": 50
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-container/src/main/java/org/owasp/webgoat/WebGoat.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    public File pluginTargetDirectory(@Value(\"${webgoat.user.directory}\") final String webgoatHome) {\n        return new File(webgoatHome);\n"
                  },
                  "endLine": 50,
                  "startLine": 49
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-22",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "Disabling Spring Security's CSRF protection is unsafe for standard web applications \nAt WebSecurityConfig.java:[lines 51-98] \nIn class org.owasp.webgoat.WebSecurityConfig \nIn method org.owasp.webgoat.WebSecurityConfig.configure(HttpSecurity) \nAt WebSecurityConfig.java:[line 72]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        security.and().csrf().disable();\n"
                  },
                  "startLine": 72
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-container/src/main/java/org/owasp/webgoat/WebSecurityConfig.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                .logout().deleteCookies(\"JSESSIONID\").invalidateHttpSession(true);\n        security.and().csrf().disable();\n"
                  },
                  "endLine": 72,
                  "startLine": 71
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-352",
          "ruleIndex": 6
        },
        {
          "message": {
            "text": "This API (java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;) reads a file whose location might be specified by user input \nAt XXETest.java:[lines 13-98] \nIn class org.owasp.webgoat.XXETest \nIn method org.owasp.webgoat.XXETest.getSecret() \nAt XXETest.java:[line 66] \nSink method java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path; \nSink parameter 1 \nUnknown source org/owasp/webgoat/XXETest.webwolfFileDir \nAt XXETest.java:[line 66]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        Path webWolfFilePath = Paths.get(webwolfFileDir);\n"
                  },
                  "startLine": 66
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-integration-tests/src/test/java/org/owasp/webgoat/XXETest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        //remove any left over DTD\n        Path webWolfFilePath = Paths.get(webwolfFileDir);\n"
                  },
                  "endLine": 66,
                  "startLine": 65
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-22",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "This API (java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;) reads a file whose location might be specified by user input \nAt XXETest.java:[lines 13-98] \nIn class org.owasp.webgoat.XXETest \nIn method org.owasp.webgoat.XXETest.getSecret() \nAt XXETest.java:[line 67] \nSink method java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path; \nSink parameter 1 \nUnknown source org/owasp/webgoat/IntegrationTest.webgoatUser \nUnknown source org/owasp/webgoat/XXETest.getWebgoatUser()Ljava/lang/String; \nAt IntegrationTest.java:[line 46] \nAt XXETest.java:[line 67]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        if (webWolfFilePath.resolve(Paths.get(getWebgoatUser(), \"blind.dtd\")).toFile().exists()) {\n"
                  },
                  "startLine": 67
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-integration-tests/src/test/java/org/owasp/webgoat/XXETest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        Path webWolfFilePath = Paths.get(webwolfFileDir);\n        if (webWolfFilePath.resolve(Paths.get(getWebgoatUser(), \"blind.dtd\")).toFile().exists()) {\n"
                  },
                  "endLine": 67,
                  "startLine": 66
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-22",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "This API (java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;) reads a file whose location might be specified by user input \nAt XXETest.java:[lines 13-98] \nIn class org.owasp.webgoat.XXETest \nIn method org.owasp.webgoat.XXETest.getSecret() \nAt XXETest.java:[line 68] \nSink method java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path; \nSink parameter 1 \nUnknown source org/owasp/webgoat/IntegrationTest.webgoatUser \nUnknown source org/owasp/webgoat/XXETest.getWebgoatUser()Ljava/lang/String; \nAt IntegrationTest.java:[line 46] \nAt XXETest.java:[line 68]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            Files.delete(webWolfFilePath.resolve(Paths.get(getWebgoatUser(), \"blind.dtd\")));\n"
                  },
                  "startLine": 68
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-integration-tests/src/test/java/org/owasp/webgoat/XXETest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        if (webWolfFilePath.resolve(Paths.get(getWebgoatUser(), \"blind.dtd\")).toFile().exists()) {\n            Files.delete(webWolfFilePath.resolve(Paths.get(getWebgoatUser(), \"blind.dtd\")));\n"
                  },
                  "endLine": 68,
                  "startLine": 67
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-22",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC) \nAt Assignment5.java:[lines 41-68] \nIn class org.owasp.webgoat.challenges.challenge5.Assignment5 \nIn method org.owasp.webgoat.challenges.challenge5.Assignment5.login(String, String) \nAt Assignment5.java:[line 60] \nSink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");\n"
                  },
                  "startLine": 60
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        try (var connection = dataSource.getConnection()) {\n            PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");\n"
                  },
                  "endLine": 60,
                  "startLine": 59
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-89",
          "ruleIndex": 9
        },
        {
          "message": {
            "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt MD5.java:[lines 37-687] \nIn class org.owasp.webgoat.challenges.challenge7.MD5 \nIn method org.owasp.webgoat.challenges.challenge7.MD5.main(String[]) \nAt MD5.java:[line 54] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nTainted source org/owasp/webgoat/challenges/challenge7/MD5.main([Ljava/lang/String;)V parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    System.out.println(MD5.getHashString(new File(element)) + \" \" + element);\n"
                  },
                  "startLine": 54
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge7/MD5.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                try {\n                    System.out.println(MD5.getHashString(new File(element)) + \" \" + element);\n"
                  },
                  "endLine": 54,
                  "startLine": 53
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-22",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "This random generator (java.util.Random) is predictable \nAt PasswordResetLink.java:[lines 11-42] \nIn class org.owasp.webgoat.challenges.challenge7.PasswordResetLink \nIn method org.owasp.webgoat.challenges.challenge7.PasswordResetLink.createPasswordReset(String, String) \nAt PasswordResetLink.java:[line 14] \nValue java.util.Random."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        Random random = new Random();\n"
                  },
                  "startLine": 14
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge7/PasswordResetLink.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    public String createPasswordReset(String username, String key) {\n        Random random = new Random();\n"
                  },
                  "endLine": 14,
                  "startLine": 13
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-330",
          "ruleIndex": 10
        },
        {
          "message": {
            "text": "This API (java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt Salaries.java:[lines 52-108] \nIn class org.owasp.webgoat.client_side_filtering.Salaries \nIn method org.owasp.webgoat.client_side_filtering.Salaries.copyFiles() \nAt Salaries.java:[line 61] \nSink method java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 1 \nUnknown source org/owasp/webgoat/client_side_filtering/Salaries.webGoatHomeDirectory \nAt Salaries.java:[line 61]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        File targetDirectory = new File(webGoatHomeDirectory, \"/ClientSideFiltering\");\n"
                  },
                  "startLine": 61
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/client-side-filtering/src/main/java/org/owasp/webgoat/client_side_filtering/Salaries.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        ClassPathResource classPathResource = new ClassPathResource(\"employees.xml\");\n        File targetDirectory = new File(webGoatHomeDirectory, \"/ClientSideFiltering\");\n"
                  },
                  "endLine": 61,
                  "startLine": 60
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-22",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "This API (java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt Salaries.java:[lines 52-108] \nIn class org.owasp.webgoat.client_side_filtering.Salaries \nIn method org.owasp.webgoat.client_side_filtering.Salaries.invoke() \nAt Salaries.java:[line 76] \nSink method java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 1 \nUnknown source org/owasp/webgoat/client_side_filtering/Salaries.webGoatHomeDirectory \nAt Salaries.java:[line 76]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        File d = new File(webGoatHomeDirectory, \"ClientSideFiltering/employees.xml\");\n"
                  },
                  "startLine": 76
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/client-side-filtering/src/main/java/org/owasp/webgoat/client_side_filtering/Salaries.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        NodeList nodes = null;\n        File d = new File(webGoatHomeDirectory, \"ClientSideFiltering/employees.xml\");\n"
                  },
                  "endLine": 76,
                  "startLine": 75
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-22",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks \nAt StartLesson.java:[lines 55-90] \nIn class org.owasp.webgoat.controller.StartLesson \nIn method org.owasp.webgoat.controller.StartLesson.lessonPage(HttpServletRequest) \nAt StartLesson.java:[lines 78-90]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        ModelAndView model = new ModelAndView();\n"
                  },
                  "startLine": 78
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-container/src/main/java/org/owasp/webgoat/controller/StartLesson.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        // I will set here the thymeleaf fragment location based on the resource requested.\n        ModelAndView model = new ModelAndView();\n"
                  },
                  "endLine": 78,
                  "startLine": 77
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-352",
          "ruleIndex": 6
        },
        {
          "message": {
            "text": "Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks \nAt StartLesson.java:[lines 55-90] \nIn class org.owasp.webgoat.controller.StartLesson \nIn method org.owasp.webgoat.controller.StartLesson.start() \nAt StartLesson.java:[lines 67-72]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        ModelAndView model = new ModelAndView();\n"
                  },
                  "startLine": 67
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-container/src/main/java/org/owasp/webgoat/controller/StartLesson.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    public ModelAndView start() {\n        ModelAndView model = new ModelAndView();\n"
                  },
                  "endLine": 67,
                  "startLine": 66
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-352",
          "ruleIndex": 6
        },
        {
          "message": {
            "text": "This random generator (java.util.Random) is predictable \nAt EncodingAssignment.java:[lines 39-70] \nIn class org.owasp.webgoat.crypto.EncodingAssignment \nIn method org.owasp.webgoat.crypto.EncodingAssignment.getBasicAuth(HttpServletRequest) \nAt EncodingAssignment.java:[line 52] \nValue java.util.Random."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tString password = HashingAssignment.SECRETS[new Random().nextInt(HashingAssignment.SECRETS.length)];\n"
                  },
                  "startLine": 52
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/EncodingAssignment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\tif (basicAuth == null) {\n\t\t\tString password = HashingAssignment.SECRETS[new Random().nextInt(HashingAssignment.SECRETS.length)];\n"
                  },
                  "endLine": 52,
                  "startLine": 51
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-330",
          "ruleIndex": 10
        },
        {
          "message": {
            "text": "This random generator (java.util.Random) is predictable \nAt HashingAssignment.java:[lines 43-107] \nIn class org.owasp.webgoat.crypto.HashingAssignment \nIn method org.owasp.webgoat.crypto.HashingAssignment.getMd5(HttpServletRequest) \nAt HashingAssignment.java:[line 54] \nValue java.util.Random."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tString secret = SECRETS[new Random().nextInt(SECRETS.length)];\n"
                  },
                  "startLine": 54
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\t\n\t\t\tString secret = SECRETS[new Random().nextInt(SECRETS.length)];\n"
                  },
                  "endLine": 54,
                  "startLine": 53
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-330",
          "ruleIndex": 10
        },
        {
          "message": {
            "text": "This random generator (java.util.Random) is predictable \nAt HashingAssignment.java:[lines 43-107] \nIn class org.owasp.webgoat.crypto.HashingAssignment \nIn method org.owasp.webgoat.crypto.HashingAssignment.getSha256(HttpServletRequest) \nAt HashingAssignment.java:[line 73] \nValue java.util.Random."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tString secret = SECRETS[new Random().nextInt(SECRETS.length)];\n"
                  },
                  "startLine": 73
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\tif (sha256 == null) {\n\t\t\tString secret = SECRETS[new Random().nextInt(SECRETS.length)];\n"
                  },
                  "endLine": 73,
                  "startLine": 72
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-330",
          "ruleIndex": 10
        },
        {
          "message": {
            "text": "Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks \nAt HashingAssignment.java:[lines 43-107] \nIn class org.owasp.webgoat.crypto.HashingAssignment \nIn method org.owasp.webgoat.crypto.HashingAssignment.getMd5(HttpServletRequest) \nAt HashingAssignment.java:[lines 51-64]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\tString md5Hash = (String) request.getSession().getAttribute(\"md5Hash\");\n"
                  },
                  "startLine": 51
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\n\t\tString md5Hash = (String) request.getSession().getAttribute(\"md5Hash\");\n"
                  },
                  "endLine": 51,
                  "startLine": 50
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-352",
          "ruleIndex": 6
        },
        {
          "message": {
            "text": "Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks \nAt HashingAssignment.java:[lines 43-107] \nIn class org.owasp.webgoat.crypto.HashingAssignment \nIn method org.owasp.webgoat.crypto.HashingAssignment.getSha256(HttpServletRequest) \nAt HashingAssignment.java:[lines 71-78]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\tString sha256 = (String) request.getSession().getAttribute(\"sha256\");\n"
                  },
                  "startLine": 71
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\n\t\tString sha256 = (String) request.getSession().getAttribute(\"sha256\");\n"
                  },
                  "endLine": 71,
                  "startLine": 70
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-352",
          "ruleIndex": 6
        },
        {
          "message": {
            "text": "Unsafe comparison of hash that are susceptible to timing attack \nAt HashingAssignment.java:[lines 43-107] \nIn class org.owasp.webgoat.crypto.HashingAssignment \nIn method org.owasp.webgoat.crypto.HashingAssignment.completed(HttpServletRequest, String, String) \nAt HashingAssignment.java:[line 89] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source javax/servlet/http/HttpSession.getAttribute(Ljava/lang/String;)Ljava/lang/Object;."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        \tif (answer_pwd1.equals(md5Secret)\n"
                  },
                  "startLine": 89
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    \tif (answer_pwd1!=null && answer_pwd2 !=null) {\n        \tif (answer_pwd1.equals(md5Secret)\n"
                  },
                  "endLine": 89,
                  "startLine": 88
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-203",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Unsafe comparison of hash that are susceptible to timing attack \nAt HashingAssignment.java:[lines 43-107] \nIn class org.owasp.webgoat.crypto.HashingAssignment \nIn method org.owasp.webgoat.crypto.HashingAssignment.completed(HttpServletRequest, String, String) \nAt HashingAssignment.java:[line 90] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source javax/servlet/http/HttpSession.getAttribute(Ljava/lang/String;)Ljava/lang/Object;."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        \t\t&& answer_pwd2.equals(sha256Secret)) {\n"
                  },
                  "startLine": 90
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \tif (answer_pwd1.equals(md5Secret)\n        \t\t&& answer_pwd2.equals(sha256Secret)) {\n"
                  },
                  "endLine": 90,
                  "startLine": 89
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-203",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Unsafe comparison of hash that are susceptible to timing attack \nAt HashingAssignment.java:[lines 43-107] \nIn class org.owasp.webgoat.crypto.HashingAssignment \nIn method org.owasp.webgoat.crypto.HashingAssignment.completed(HttpServletRequest, String, String) \nAt HashingAssignment.java:[line 94] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source javax/servlet/http/HttpSession.getAttribute(Ljava/lang/String;)Ljava/lang/Object;."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        \t} else if (answer_pwd1.equals(md5Secret)\n"
                  },
                  "startLine": 94
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \t\t\t\t.build();\n        \t} else if (answer_pwd1.equals(md5Secret)\n"
                  },
                  "endLine": 94,
                  "startLine": 93
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-203",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Unsafe comparison of hash that are susceptible to timing attack \nAt HashingAssignment.java:[lines 43-107] \nIn class org.owasp.webgoat.crypto.HashingAssignment \nIn method org.owasp.webgoat.crypto.HashingAssignment.completed(HttpServletRequest, String, String) \nAt HashingAssignment.java:[line 95] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source javax/servlet/http/HttpSession.getAttribute(Ljava/lang/String;)Ljava/lang/Object;."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            \t\t|| answer_pwd2.equals(sha256Secret)) {\n"
                  },
                  "startLine": 95
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \t} else if (answer_pwd1.equals(md5Secret)\n            \t\t|| answer_pwd2.equals(sha256Secret)) {\n"
                  },
                  "endLine": 95,
                  "startLine": 94
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-203",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "This API MD5 (MDX) is not a recommended cryptographic hash function \nAt HashingAssignment.java:[lines 43-107] \nIn class org.owasp.webgoat.crypto.HashingAssignment \nIn method org.owasp.webgoat.crypto.HashingAssignment.getMd5(HttpServletRequest) \nAt HashingAssignment.java:[line 56] \nValue MD5."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n"
                  },
                  "startLine": 56
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/HashingAssignment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t         \n\t\t    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n"
                  },
                  "endLine": 56,
                  "startLine": 55
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-328",
          "ruleIndex": 11
        },
        {
          "message": {
            "text": "This use of org/slf4j/Logger.warn(Ljava/lang/String;Ljava/lang/Object;)V might be used to include CRLF characters into log messages \nAt SigningAssignment.java:[lines 45-81] \nIn class org.owasp.webgoat.crypto.SigningAssignment \nIn method org.owasp.webgoat.crypto.SigningAssignment.completed(HttpServletRequest, String, String) \nAt SigningAssignment.java:[line 73] \nSink method org/slf4j/Logger.warn(Ljava/lang/String;Ljava/lang/Object;)V \nSink parameter 0 \nTainted source org/owasp/webgoat/crypto/SigningAssignment.completed(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;Ljava/lang/String;)Lorg/owasp/webgoat/assignments/AttackResult; parameter 1."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\t\tlog.warn(\"modulus {} incorrect\", modulus);\n"
                  },
                  "startLine": 73
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/SigningAssignment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\tif (!DatatypeConverter.printHexBinary(rsaPubKey.getModulus().toByteArray()).equals(tempModulus.toUpperCase())) {\n\t\t\tlog.warn(\"modulus {} incorrect\", modulus);\n"
                  },
                  "endLine": 73,
                  "startLine": 72
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-117",
          "ruleIndex": 1
        },
        {
          "message": {
            "text": "Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks \nAt SigningAssignment.java:[lines 45-81] \nIn class org.owasp.webgoat.crypto.SigningAssignment \nIn method org.owasp.webgoat.crypto.SigningAssignment.getPrivateKey(HttpServletRequest) \nAt SigningAssignment.java:[lines 52-59]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\tString privateKey = (String) request.getSession().getAttribute(\"privateKeyString\");\n"
                  },
                  "startLine": 52
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/crypto/src/main/java/org/owasp/webgoat/crypto/SigningAssignment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\t\n\t\tString privateKey = (String) request.getSession().getAttribute(\"privateKeyString\");\n"
                  },
                  "endLine": 52,
                  "startLine": 51
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-352",
          "ruleIndex": 6
        },
        {
          "message": {
            "text": "This random generator (java.util.Random) is predictable \nAt CSRFGetFlag.java:[lines 42-86] \nIn class org.owasp.webgoat.csrf.CSRFGetFlag \nIn method org.owasp.webgoat.csrf.CSRFGetFlag.invoke(HttpServletRequest) \nAt CSRFGetFlag.java:[line 62] \nValue java.util.Random."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                Random random = new Random();\n"
                  },
                  "startLine": 62
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/csrf/src/main/java/org/owasp/webgoat/csrf/CSRFGetFlag.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            if (\"true\".equals(req.getParameter(\"csrf\"))) {\n                Random random = new Random();\n"
                  },
                  "endLine": 62,
                  "startLine": 61
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-330",
          "ruleIndex": 10
        },
        {
          "message": {
            "text": "This random generator (java.util.Random) is predictable \nAt CSRFGetFlag.java:[lines 42-86] \nIn class org.owasp.webgoat.csrf.CSRFGetFlag \nIn method org.owasp.webgoat.csrf.CSRFGetFlag.invoke(HttpServletRequest) \nAt CSRFGetFlag.java:[line 68] \nValue java.util.Random."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                Random random = new Random();\n"
                  },
                  "startLine": 68
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/csrf/src/main/java/org/owasp/webgoat/csrf/CSRFGetFlag.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            } else {\n                Random random = new Random();\n"
                  },
                  "endLine": 68,
                  "startLine": 67
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-330",
          "ruleIndex": 10
        },
        {
          "message": {
            "text": "This random generator (java.util.Random) is predictable \nAt CSRFGetFlag.java:[lines 42-86] \nIn class org.owasp.webgoat.csrf.CSRFGetFlag \nIn method org.owasp.webgoat.csrf.CSRFGetFlag.invoke(HttpServletRequest) \nAt CSRFGetFlag.java:[line 79] \nValue java.util.Random."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            Random random = new Random();\n"
                  },
                  "startLine": 79
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/csrf/src/main/java/org/owasp/webgoat/csrf/CSRFGetFlag.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        } else {\n            Random random = new Random();\n"
                  },
                  "endLine": 79,
                  "startLine": 78
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-330",
          "ruleIndex": 10
        },
        {
          "message": {
            "text": "Object deserialization is used in org.owasp.webgoat.deserialization.InsecureDeserializationTask.completed(String) \nAt InsecureDeserializationTask.java:[lines 42-79] \nIn class org.owasp.webgoat.deserialization.InsecureDeserializationTask \nIn method org.owasp.webgoat.deserialization.InsecureDeserializationTask.completed(String) \nAt InsecureDeserializationTask.java:[line 56]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            Object o = ois.readObject();\n"
                  },
                  "startLine": 56
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/insecure-deserialization/src/main/java/org/owasp/webgoat/deserialization/InsecureDeserializationTask.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            before = System.currentTimeMillis();\n            Object o = ois.readObject();\n"
                  },
                  "endLine": 56,
                  "startLine": 55
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-502",
          "ruleIndex": 12
        },
        {
          "message": {
            "text": "Object deserialization is used in org.owasp.webgoat.deserialization.SerializationHelper.fromString(String) \nAt SerializationHelper.java:[lines 12-51] \nIn class org.owasp.webgoat.deserialization.SerializationHelper \nIn method org.owasp.webgoat.deserialization.SerializationHelper.fromString(String) \nAt SerializationHelper.java:[line 21]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        Object o = ois.readObject();\n"
                  },
                  "startLine": 21
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/insecure-deserialization/src/main/java/org/owasp/webgoat/deserialization/SerializationHelper.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                new ByteArrayInputStream(data));\n        Object o = ois.readObject();\n"
                  },
                  "endLine": 21,
                  "startLine": 20
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-502",
          "ruleIndex": 12
        },
        {
          "message": {
            "text": "Cookie without the HttpOnly flag could be read by a malicious script in the browser \nAt HijackSessionAssignment.java:[lines 55-90] \nIn class org.owasp.webgoat.hijacksession.HijackSessionAssignment \nIn method org.owasp.webgoat.hijacksession.HijackSessionAssignment.setCookie(HttpServletResponse, String) \nAt HijackSessionAssignment.java:[line 86]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        Cookie cookie = new Cookie(COOKIE_NAME, cookieValue);\n"
                  },
                  "startLine": 86
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/hijack-session/src/main/java/org/owasp/webgoat/hijacksession/HijackSessionAssignment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    private void setCookie(HttpServletResponse response, String cookieValue) {\n        Cookie cookie = new Cookie(COOKIE_NAME, cookieValue);\n"
                  },
                  "endLine": 86,
                  "startLine": 85
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "HTTPONLY_COOKIE",
          "ruleIndex": 13
        },
        {
          "message": {
            "text": "Cookie without the HttpOnly flag could be read by a malicious script in the browser \nAt HijackSessionAssignmentTest.java:[lines 56-106] \nIn class org.owasp.webgoat.hijacksession.HijackSessionAssignmentTest \nIn method org.owasp.webgoat.hijacksession.HijackSessionAssignmentTest.testValidCookie() \nAt HijackSessionAssignmentTest.java:[line 84]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        Cookie cookie = new Cookie(COOKIE_NAME, \"value\");\n"
                  },
                  "startLine": 84
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/hijack-session/src/test/java/org/owasp/webgoat/hijacksession/HijackSessionAssignmentTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n        Cookie cookie = new Cookie(COOKIE_NAME, \"value\");\n"
                  },
                  "endLine": 84,
                  "startLine": 83
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "HTTPONLY_COOKIE",
          "ruleIndex": 13
        },
        {
          "message": {
            "text": "Cookie without the secure flag could be sent in clear text if a HTTP URL is visited \nAt HijackSessionAssignmentTest.java:[lines 56-106] \nIn class org.owasp.webgoat.hijacksession.HijackSessionAssignmentTest \nIn method org.owasp.webgoat.hijacksession.HijackSessionAssignmentTest.testValidCookie() \nAt HijackSessionAssignmentTest.java:[line 84]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        Cookie cookie = new Cookie(COOKIE_NAME, \"value\");\n"
                  },
                  "startLine": 84
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/hijack-session/src/test/java/org/owasp/webgoat/hijacksession/HijackSessionAssignmentTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n        Cookie cookie = new Cookie(COOKIE_NAME, \"value\");\n"
                  },
                  "endLine": 84,
                  "startLine": 83
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-614",
          "ruleIndex": 14
        },
        {
          "message": {
            "text": "This random generator (java.util.Random) is predictable \nAt HijackSessionAuthenticationProvider.java:[lines 46-97] \nIn class org.owasp.webgoat.hijacksession.cas.HijackSessionAuthenticationProvider \nIn method org.owasp.webgoat.hijacksession.cas.HijackSessionAuthenticationProvider.<static initializer for HijackSessionAuthenticationProvider>() \nAt HijackSessionAuthenticationProvider.java:[line 51] \nValue java.util.Random."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    private static long id = new Random().nextLong() & Long.MAX_VALUE;\n"
                  },
                  "startLine": 51
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/hijack-session/src/main/java/org/owasp/webgoat/hijacksession/cas/HijackSessionAuthenticationProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    private Queue<String> sessions = new LinkedList<>();\n    private static long id = new Random().nextLong() & Long.MAX_VALUE;\n"
                  },
                  "endLine": 51,
                  "startLine": 50
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-330",
          "ruleIndex": 10
        },
        {
          "message": {
            "text": "This random generator (java.util.concurrent.ThreadLocalRandom) is predictable \nAt HijackSessionAuthenticationProvider.java:[lines 46-97] \nIn class org.owasp.webgoat.hijacksession.cas.HijackSessionAuthenticationProvider \nIn method org.owasp.webgoat.hijacksession.cas.HijackSessionAuthenticationProvider.authorizedUserAutoLogin() \nAt HijackSessionAuthenticationProvider.java:[line 82] \nValue java.util.concurrent.ThreadLocalRandom."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        if (!PROBABILITY_DOUBLE_PREDICATE.test(ThreadLocalRandom.current().nextDouble())) {\n"
                  },
                  "startLine": 82
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/hijack-session/src/main/java/org/owasp/webgoat/hijacksession/cas/HijackSessionAuthenticationProvider.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    protected void authorizedUserAutoLogin() {\n        if (!PROBABILITY_DOUBLE_PREDICATE.test(ThreadLocalRandom.current().nextDouble())) {\n"
                  },
                  "endLine": 82,
                  "startLine": 81
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-330",
          "ruleIndex": 10
        },
        {
          "message": {
            "text": "Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks \nAt HttpBasicsInterceptRequest.java:[lines 38-50] \nIn class org.owasp.webgoat.http_proxies.HttpBasicsInterceptRequest \nIn method org.owasp.webgoat.http_proxies.HttpBasicsInterceptRequest.completed(Boolean, String, HttpServletRequest) \nAt HttpBasicsInterceptRequest.java:[lines 44-50]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        if (HttpMethod.POST.matches(request.getMethod())) {\n"
                  },
                  "startLine": 44
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/http-proxies/src/main/java/org/owasp/webgoat/http_proxies/HttpBasicsInterceptRequest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                                  @RequestParam(value = \"changeMe\", required = false) String paramValue, HttpServletRequest request) {\n        if (HttpMethod.POST.matches(request.getMethod())) {\n"
                  },
                  "endLine": 44,
                  "startLine": 43
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-352",
          "ruleIndex": 6
        },
        {
          "message": {
            "text": "Hard coded password found \nAt IDORLogin.java:[lines 39-74] \nIn class org.owasp.webgoat.idor.IDORLogin \nIn method org.owasp.webgoat.idor.IDORLogin.initIDORInfo() \nAt IDORLogin.java:[line 46] \nSink method java/util/Map.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        idorUserInfo.get(\"tom\").put(\"password\", \"cat\");\n"
                  },
                  "startLine": 46
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/idor/src/main/java/org/owasp/webgoat/idor/IDORLogin.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        idorUserInfo.put(\"tom\", new HashMap<String, String>());\n        idorUserInfo.get(\"tom\").put(\"password\", \"cat\");\n"
                  },
                  "endLine": 46,
                  "startLine": 45
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-259",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Hard coded password found \nAt IDORLogin.java:[lines 39-74] \nIn class org.owasp.webgoat.idor.IDORLogin \nIn method org.owasp.webgoat.idor.IDORLogin.initIDORInfo() \nAt IDORLogin.java:[line 52] \nSink method java/util/Map.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        idorUserInfo.get(\"bill\").put(\"password\", \"buffalo\");\n"
                  },
                  "startLine": 52
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/idor/src/main/java/org/owasp/webgoat/idor/IDORLogin.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        idorUserInfo.put(\"bill\", new HashMap<String, String>());\n        idorUserInfo.get(\"bill\").put(\"password\", \"buffalo\");\n"
                  },
                  "endLine": 52,
                  "startLine": 51
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-259",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC) \nAt JWTFinalEndpoint.java:[lines 89-101] \nIn class org.owasp.webgoat.jwt.JWTFinalEndpoint$1 \nIn method org.owasp.webgoat.jwt.JWTFinalEndpoint$1.resolveSigningKeyBytes(JwsHeader, Claims) \nAt JWTFinalEndpoint.java:[line 94] \nSink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                            ResultSet rs = connection.createStatement().executeQuery(\"SELECT key FROM jwt_keys WHERE id = '\" + kid + \"'\");\n"
                  },
                  "startLine": 94
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTFinalEndpoint.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                        try (var connection = dataSource.getConnection()) {\n                            ResultSet rs = connection.createStatement().executeQuery(\"SELECT key FROM jwt_keys WHERE id = '\" + kid + \"'\");\n"
                  },
                  "endLine": 94,
                  "startLine": 93
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-89",
          "ruleIndex": 9
        },
        {
          "message": {
            "text": "Hard coded password found \nAt JWTRefreshEndpointTest.java:[lines 48-215] \nIn class org.owasp.webgoat.jwt.JWTRefreshEndpointTest \nIn method org.owasp.webgoat.jwt.JWTRefreshEndpointTest.newTokenShouldWorkForJerry() \nAt JWTRefreshEndpointTest.java:[line 159] \nSink method java/util/Map.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        loginJson.put(\"password\", PASSWORD);\n"
                  },
                  "startLine": 159
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTRefreshEndpointTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        loginJson.put(\"user\", \"Jerry\");\n        loginJson.put(\"password\", PASSWORD);\n"
                  },
                  "endLine": 159,
                  "startLine": 158
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-259",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Hard coded password found \nAt JWTRefreshEndpointTest.java:[lines 48-215] \nIn class org.owasp.webgoat.jwt.JWTRefreshEndpointTest \nIn method org.owasp.webgoat.jwt.JWTRefreshEndpointTest.unknownRefreshTokenShouldGiveUnauthorized() \nAt JWTRefreshEndpointTest.java:[line 182] \nSink method java/util/Map.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        loginJson.put(\"password\", PASSWORD);\n"
                  },
                  "startLine": 182
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/jwt/src/test/java/org/owasp/webgoat/jwt/JWTRefreshEndpointTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        loginJson.put(\"user\", \"Jerry\");\n        loginJson.put(\"password\", PASSWORD);\n"
                  },
                  "endLine": 182,
                  "startLine": 181
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-259",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "This random generator (java.util.Random) is predictable \nAt JWTSecretKeyEndpoint.java:[lines 52-92] \nIn class org.owasp.webgoat.jwt.JWTSecretKeyEndpoint \nIn method org.owasp.webgoat.jwt.JWTSecretKeyEndpoint.<static initializer for JWTSecretKeyEndpoint>() \nAt JWTSecretKeyEndpoint.java:[line 55] \nValue java.util.Random."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    public static final String JWT_SECRET = TextCodec.BASE64.encode(SECRETS[new Random().nextInt(SECRETS.length)]);\n"
                  },
                  "startLine": 55
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTSecretKeyEndpoint.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    public static final String[] SECRETS = {\"victory\", \"business\", \"available\", \"shipping\", \"washington\"};\n    public static final String JWT_SECRET = TextCodec.BASE64.encode(SECRETS[new Random().nextInt(SECRETS.length)]);\n"
                  },
                  "endLine": 55,
                  "startLine": 54
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-330",
          "ruleIndex": 10
        },
        {
          "message": {
            "text": "Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks \nAt JWTSecretKeyEndpoint.java:[lines 52-92] \nIn class org.owasp.webgoat.jwt.JWTSecretKeyEndpoint \nIn method org.owasp.webgoat.jwt.JWTSecretKeyEndpoint.getSecretToken() \nAt JWTSecretKeyEndpoint.java:[line 62]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        return Jwts.builder()\n"
                  },
                  "startLine": 62
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTSecretKeyEndpoint.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    public String getSecretToken() {\n        return Jwts.builder()\n"
                  },
                  "endLine": 62,
                  "startLine": 61
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-352",
          "ruleIndex": 6
        },
        {
          "message": {
            "text": "Cookie without the HttpOnly flag could be read by a malicious script in the browser \nAt JWTVotesEndpoint.java:[lines 68-180] \nIn class org.owasp.webgoat.jwt.JWTVotesEndpoint \nIn method org.owasp.webgoat.jwt.JWTVotesEndpoint.login(String, HttpServletResponse) \nAt JWTVotesEndpoint.java:[line 105]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            Cookie cookie = new Cookie(\"access_token\", token);\n"
                  },
                  "startLine": 105
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTVotesEndpoint.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    .compact();\n            Cookie cookie = new Cookie(\"access_token\", token);\n"
                  },
                  "endLine": 105,
                  "startLine": 104
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "HTTPONLY_COOKIE",
          "ruleIndex": 13
        },
        {
          "message": {
            "text": "Cookie without the HttpOnly flag could be read by a malicious script in the browser \nAt JWTVotesEndpoint.java:[lines 68-180] \nIn class org.owasp.webgoat.jwt.JWTVotesEndpoint \nIn method org.owasp.webgoat.jwt.JWTVotesEndpoint.login(String, HttpServletResponse) \nAt JWTVotesEndpoint.java:[line 110]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            Cookie cookie = new Cookie(\"access_token\", \"\");\n"
                  },
                  "startLine": 110
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTVotesEndpoint.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        } else {\n            Cookie cookie = new Cookie(\"access_token\", \"\");\n"
                  },
                  "endLine": 110,
                  "startLine": 109
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "HTTPONLY_COOKIE",
          "ruleIndex": 13
        },
        {
          "message": {
            "text": "Cookie without the secure flag could be sent in clear text if a HTTP URL is visited \nAt JWTVotesEndpoint.java:[lines 68-180] \nIn class org.owasp.webgoat.jwt.JWTVotesEndpoint \nIn method org.owasp.webgoat.jwt.JWTVotesEndpoint.login(String, HttpServletResponse) \nAt JWTVotesEndpoint.java:[line 105]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            Cookie cookie = new Cookie(\"access_token\", token);\n"
                  },
                  "startLine": 105
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTVotesEndpoint.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    .compact();\n            Cookie cookie = new Cookie(\"access_token\", token);\n"
                  },
                  "endLine": 105,
                  "startLine": 104
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-614",
          "ruleIndex": 14
        },
        {
          "message": {
            "text": "Cookie without the secure flag could be sent in clear text if a HTTP URL is visited \nAt JWTVotesEndpoint.java:[lines 68-180] \nIn class org.owasp.webgoat.jwt.JWTVotesEndpoint \nIn method org.owasp.webgoat.jwt.JWTVotesEndpoint.login(String, HttpServletResponse) \nAt JWTVotesEndpoint.java:[line 110]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            Cookie cookie = new Cookie(\"access_token\", \"\");\n"
                  },
                  "startLine": 110
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/jwt/src/main/java/org/owasp/webgoat/jwt/JWTVotesEndpoint.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        } else {\n            Cookie cookie = new Cookie(\"access_token\", \"\");\n"
                  },
                  "endLine": 110,
                  "startLine": 109
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-614",
          "ruleIndex": 14
        },
        {
          "message": {
            "text": "This use of java/sql/Statement.execute(Ljava/lang/String;)Z can be vulnerable to SQL injection (with JDBC) \nAt LessonConnectionInvocationHandler.java:[lines 19-33] \nIn class org.owasp.webgoat.lessons.LessonConnectionInvocationHandler \nIn method org.owasp.webgoat.lessons.LessonConnectionInvocationHandler.invoke(Object, Method, Object[]) \nAt LessonConnectionInvocationHandler.java:[line 28] \nSink method java/sql/Statement.execute(Ljava/lang/String;)Z \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            targetConnection.createStatement().execute(\"SET SCHEMA \\\"\" + user.getUsername() + \"\\\"\");\n"
                  },
                  "startLine": 28
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-container/src/main/java/org/owasp/webgoat/lessons/LessonConnectionInvocationHandler.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            var user = (WebGoatUser) authentication.getPrincipal();\n            targetConnection.createStatement().execute(\"SET SCHEMA \\\"\" + user.getUsername() + \"\\\"\");\n"
                  },
                  "endLine": 28,
                  "startLine": 27
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-89",
          "ruleIndex": 9
        },
        {
          "message": {
            "text": "Unsafe comparison of hash that are susceptible to timing attack \nAt MissingFunctionACYourHash.java:[lines 37-51] \nIn class org.owasp.webgoat.missing_ac.MissingFunctionACYourHash \nIn method org.owasp.webgoat.missing_ac.MissingFunctionACYourHash.simple(String) \nAt MissingFunctionACYourHash.java:[line 48] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source org/owasp/webgoat/missing_ac/DisplayUser.getUserHash()Ljava/lang/String; \nUnknown source org/owasp/webgoat/missing_ac/DisplayUser.userHash \nAt DisplayUser.java:[line 40] \nAt MissingFunctionACYourHash.java:[line 48]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        if (userHash.equals(displayUser.getUserHash())) {\n"
                  },
                  "startLine": 48
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/missing-function-ac/src/main/java/org/owasp/webgoat/missing_ac/MissingFunctionACYourHash.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        DisplayUser displayUser = new DisplayUser(user, PASSWORD_SALT_SIMPLE);\n        if (userHash.equals(displayUser.getUserHash())) {\n"
                  },
                  "endLine": 48,
                  "startLine": 47
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-203",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Unsafe comparison of hash that are susceptible to timing attack \nAt MissingFunctionACYourHashAdmin.java:[lines 41-56] \nIn class org.owasp.webgoat.missing_ac.MissingFunctionACYourHashAdmin \nIn method org.owasp.webgoat.missing_ac.MissingFunctionACYourHashAdmin.admin(String) \nAt MissingFunctionACYourHashAdmin.java:[line 53] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0 \nUnknown source org/owasp/webgoat/missing_ac/DisplayUser.getUserHash()Ljava/lang/String; \nUnknown source org/owasp/webgoat/missing_ac/DisplayUser.userHash \nAt DisplayUser.java:[line 40] \nAt MissingFunctionACYourHashAdmin.java:[line 53]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        if (userHash.equals(displayUser.getUserHash())) {\n"
                  },
                  "startLine": 53
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/missing-function-ac/src/main/java/org/owasp/webgoat/missing_ac/MissingFunctionACYourHashAdmin.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        var displayUser = new DisplayUser(user, PASSWORD_SALT_ADMIN);\n        if (userHash.equals(displayUser.getUserHash())) {\n"
                  },
                  "endLine": 53,
                  "startLine": 52
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-203",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Hard coded password found \nAt ResetLinkAssignment.java:[lines 52-129] \nIn class org.owasp.webgoat.password_reset.ResetLinkAssignment \nIn method org.owasp.webgoat.password_reset.ResetLinkAssignment.login(String, String) \nAt ResetLinkAssignment.java:[line 75] \nSink method java/lang/String.equals(Ljava/lang/Object;)Z \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            if (passwordTom.equals(PASSWORD_TOM_9)) {\n"
                  },
                  "startLine": 75
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/password-reset/src/main/java/org/owasp/webgoat/password_reset/ResetLinkAssignment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            String passwordTom = usersToTomPassword.getOrDefault(getWebSession().getUserName(), PASSWORD_TOM_9);\n            if (passwordTom.equals(PASSWORD_TOM_9)) {\n"
                  },
                  "endLine": 75,
                  "startLine": 74
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-259",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ProfileUploadBase.java:[lines 23-94] \nIn class org.owasp.webgoat.path_traversal.ProfileUploadBase \nIn method org.owasp.webgoat.path_traversal.ProfileUploadBase.execute(MultipartFile, String) \nAt ProfileUploadBase.java:[line 45] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/owasp/webgoat/path_traversal/ProfileUploadBase.execute(Lorg/springframework/web/multipart/MultipartFile;Ljava/lang/String;)Lorg/owasp/webgoat/assignments/AttackResult; parameter 0 \nMethod usage with tainted arguments detected \nAt ProfileUpload.java:[line 29] \nAt ProfileUploadBase.java:[line 34] \nAt ProfileUploadFix.java:[line 31] \nAt ProfileUploadRemoveUserInput.java:[line 27]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            var uploadedFile = new File(uploadDirectory, fullName);\n"
                  },
                  "startLine": 45
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadBase.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            uploadDirectory.mkdirs();\n            var uploadedFile = new File(uploadDirectory, fullName);\n"
                  },
                  "endLine": 45,
                  "startLine": 44
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-22",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "This API (java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ProfileUploadBase.java:[lines 23-94] \nIn class org.owasp.webgoat.path_traversal.ProfileUploadBase \nIn method org.owasp.webgoat.path_traversal.ProfileUploadBase.execute(MultipartFile, String) \nAt ProfileUploadBase.java:[line 38] \nSink method java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        var uploadDirectory = new File(this.webGoatHomeDirectory, \"/PathTraversal/\" + webSession.getUserName());\n"
                  },
                  "startLine": 38
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadBase.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n        var uploadDirectory = new File(this.webGoatHomeDirectory, \"/PathTraversal/\" + webSession.getUserName());\n"
                  },
                  "endLine": 38,
                  "startLine": 37
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-22",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "This API (java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ProfileUploadBase.java:[lines 23-94] \nIn class org.owasp.webgoat.path_traversal.ProfileUploadBase \nIn method org.owasp.webgoat.path_traversal.ProfileUploadBase.getProfilePictureAsBase64() \nAt ProfileUploadBase.java:[line 77] \nSink method java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        var profilePictureDirectory = new File(this.webGoatHomeDirectory, \"/PathTraversal/\" + webSession.getUserName());\n"
                  },
                  "startLine": 77
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadBase.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    protected byte[] getProfilePictureAsBase64() {\n        var profilePictureDirectory = new File(this.webGoatHomeDirectory, \"/PathTraversal/\" + webSession.getUserName());\n"
                  },
                  "endLine": 77,
                  "startLine": 76
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-22",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "This API (java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ProfileUploadRetrieval.java:[lines 41-106] \nIn class org.owasp.webgoat.path_traversal.ProfileUploadRetrieval \nIn method new org.owasp.webgoat.path_traversal.ProfileUploadRetrieval(String) \nAt ProfileUploadRetrieval.java:[line 47] \nSink method java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 1 \nUnknown source org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.<init>(Ljava/lang/String;)V parameter 0 \nMethod usage not detected."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        this.catPicturesDirectory = new File(webGoatHomeDirectory, \"/PathTraversal/\" + \"/cats\");\n"
                  },
                  "startLine": 47
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    public ProfileUploadRetrieval(@Value(\"${webgoat.server.directory}\") String webGoatHomeDirectory) {\n        this.catPicturesDirectory = new File(webGoatHomeDirectory, \"/PathTraversal/\" + \"/cats\");\n"
                  },
                  "endLine": 47,
                  "startLine": 46
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-22",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ProfileUploadRetrieval.java:[lines 41-106] \nIn class org.owasp.webgoat.path_traversal.ProfileUploadRetrieval \nIn method org.owasp.webgoat.path_traversal.ProfileUploadRetrieval.getProfilePicture(HttpServletRequest) \nAt ProfileUploadRetrieval.java:[line 86] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            var catPicture = new File(catPicturesDirectory, (id == null ? RandomUtils.nextInt(1, 11) : id) + \".jpg\");\n"
                  },
                  "startLine": 86
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            var id = request.getParameter(\"id\");\n            var catPicture = new File(catPicturesDirectory, (id == null ? RandomUtils.nextInt(1, 11) : id) + \".jpg\");\n"
                  },
                  "endLine": 86,
                  "startLine": 85
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-22",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ProfileUploadRetrieval.java:[lines 41-106] \nIn class org.owasp.webgoat.path_traversal.ProfileUploadRetrieval \nIn method org.owasp.webgoat.path_traversal.ProfileUploadRetrieval.initAssignment() \nAt ProfileUploadRetrieval.java:[line 55] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                FileCopyUtils.copy(is, new FileOutputStream(new File(catPicturesDirectory, i + \".jpg\")));\n"
                  },
                  "startLine": 55
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileUploadRetrieval.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            try (InputStream is = new ClassPathResource(\"images/cats/\" + i + \".jpg\").getInputStream()) {\n                FileCopyUtils.copy(is, new FileOutputStream(new File(catPicturesDirectory, i + \".jpg\")));\n"
                  },
                  "endLine": 55,
                  "startLine": 54
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-22",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "This API (java/nio/file/Files.createTempDirectory(Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;) reads a file whose location might be specified by user input \nAt ProfileZipSlip.java:[lines 31-87] \nIn class org.owasp.webgoat.path_traversal.ProfileZipSlip \nIn method org.owasp.webgoat.path_traversal.ProfileZipSlip.processZipUpload(MultipartFile) \nAt ProfileZipSlip.java:[line 46] \nSink method java/nio/file/Files.createTempDirectory(Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path; \nSink parameter 1 \nUnknown source org/owasp/webgoat/users/WebGoatUser.getUsername()Ljava/lang/String; \nUnknown source org/owasp/webgoat/session/WebSession.getUserName()Ljava/lang/String; \nUnknown source org/owasp/webgoat/users/WebGoatUser.username \nAt ProfileZipSlip.java:[line 46] \nAt WebSession.java:[line 73] \nAt WebGoatUser.java:[line 61]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        var tmpZipDirectory = Files.createTempDirectory(getWebSession().getUserName());\n"
                  },
                  "startLine": 46
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileZipSlip.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    private AttackResult processZipUpload(MultipartFile file) {\n        var tmpZipDirectory = Files.createTempDirectory(getWebSession().getUserName());\n"
                  },
                  "endLine": 46,
                  "startLine": 45
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-22",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "This API (java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ProfileZipSlip.java:[lines 31-87] \nIn class org.owasp.webgoat.path_traversal.ProfileZipSlip \nIn method org.owasp.webgoat.path_traversal.ProfileZipSlip.processZipUpload(MultipartFile) \nAt ProfileZipSlip.java:[line 47] \nSink method java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        var uploadDirectory = new File(getWebGoatHomeDirectory(), \"/PathTraversal/\" + getWebSession().getUserName());\n"
                  },
                  "startLine": 47
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileZipSlip.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        var tmpZipDirectory = Files.createTempDirectory(getWebSession().getUserName());\n        var uploadDirectory = new File(getWebGoatHomeDirectory(), \"/PathTraversal/\" + getWebSession().getUserName());\n"
                  },
                  "endLine": 47,
                  "startLine": 46
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-22",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt ProfileZipSlip.java:[lines 31-87] \nIn class org.owasp.webgoat.path_traversal.ProfileZipSlip \nIn method org.owasp.webgoat.path_traversal.ProfileZipSlip.processZipUpload(MultipartFile) \nAt ProfileZipSlip.java:[line 60] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source java/util/zip/ZipEntry.getName()Ljava/lang/String;."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                File f = new File(tmpZipDirectory.toFile(), e.getName());\n"
                  },
                  "startLine": 60
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/path-traversal/src/main/java/org/owasp/webgoat/path_traversal/ProfileZipSlip.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                ZipEntry e = entries.nextElement();\n                File f = new File(tmpZipDirectory.toFile(), e.getName());\n"
                  },
                  "endLine": 60,
                  "startLine": 59
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-22",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks \nAt LabelDebugService.java:[lines 53-99] \nIn class org.owasp.webgoat.service.LabelDebugService \nIn method org.owasp.webgoat.service.LabelDebugService.checkDebuggingStatus() \nAt LabelDebugService.java:[lines 71-73]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        log.debug(\"Checking label debugging, it is {}\", labelDebugger.isEnabled());\n"
                  },
                  "startLine": 71
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-container/src/main/java/org/owasp/webgoat/service/LabelDebugService.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    ResponseEntity<Map<String, Object>> checkDebuggingStatus() {\n        log.debug(\"Checking label debugging, it is {}\", labelDebugger.isEnabled());\n"
                  },
                  "endLine": 71,
                  "startLine": 70
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-352",
          "ruleIndex": 6
        },
        {
          "message": {
            "text": "Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks \nAt LabelDebugService.java:[lines 53-99] \nIn class org.owasp.webgoat.service.LabelDebugService \nIn method org.owasp.webgoat.service.LabelDebugService.setDebuggingStatus(Boolean) \nAt LabelDebugService.java:[lines 85-88]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        log.debug(\"Setting label debugging to {} \", labelDebugger.isEnabled());\n"
                  },
                  "startLine": 85
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-container/src/main/java/org/owasp/webgoat/service/LabelDebugService.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    ResponseEntity<Map<String, Object>> setDebuggingStatus(@RequestParam(\"enabled\") Boolean enabled) throws Exception {\n        log.debug(\"Setting label debugging to {} \", labelDebugger.isEnabled());\n"
                  },
                  "endLine": 85,
                  "startLine": 84
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-352",
          "ruleIndex": 6
        },
        {
          "message": {
            "text": "Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks \nAt LessonInfoService.java:[lines 19-33] \nIn class org.owasp.webgoat.service.LessonInfoService \nIn method org.owasp.webgoat.service.LessonInfoService.getLessonInfo() \nAt LessonInfoService.java:[lines 32-33]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        Lesson lesson = webSession.getCurrentLesson();\n"
                  },
                  "startLine": 32
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-container/src/main/java/org/owasp/webgoat/service/LessonInfoService.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    LessonInfoModel getLessonInfo() {\n        Lesson lesson = webSession.getCurrentLesson();\n"
                  },
                  "endLine": 32,
                  "startLine": 31
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-352",
          "ruleIndex": 6
        },
        {
          "message": {
            "text": "Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks \nAt LessonMenuService.java:[lines 61-130] \nIn class org.owasp.webgoat.service.LessonMenuService \nIn method org.owasp.webgoat.service.LessonMenuService.showLeftNav() \nAt LessonMenuService.java:[lines 84-114]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        List<LessonMenuItem> menu = new ArrayList<>();\n"
                  },
                  "startLine": 84
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-container/src/main/java/org/owasp/webgoat/service/LessonMenuService.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    List<LessonMenuItem> showLeftNav() {\n        List<LessonMenuItem> menu = new ArrayList<>();\n"
                  },
                  "endLine": 84,
                  "startLine": 83
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-352",
          "ruleIndex": 6
        },
        {
          "message": {
            "text": "Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks \nAt LessonProgressService.java:[lines 28-89] \nIn class org.owasp.webgoat.service.LessonProgressService \nIn method org.owasp.webgoat.service.LessonProgressService.lessonOverview() \nAt LessonProgressService.java:[lines 43-50]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        UserTracker userTracker = userTrackerRepository.findByUser(webSession.getUserName());\n"
                  },
                  "startLine": 43
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-container/src/main/java/org/owasp/webgoat/service/LessonProgressService.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    public List<LessonOverview> lessonOverview() {\n        UserTracker userTracker = userTrackerRepository.findByUser(webSession.getUserName());\n"
                  },
                  "endLine": 43,
                  "startLine": 42
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-352",
          "ruleIndex": 6
        },
        {
          "message": {
            "text": "Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks \nAt LessonTitleService.java:[lines 21-35] \nIn class org.owasp.webgoat.service.LessonTitleService \nIn method org.owasp.webgoat.service.LessonTitleService.showPlan() \nAt LessonTitleService.java:[lines 34-35]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        Lesson lesson = webSession.getCurrentLesson();\n"
                  },
                  "startLine": 34
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-container/src/main/java/org/owasp/webgoat/service/LessonTitleService.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    String showPlan() {\n        Lesson lesson = webSession.getCurrentLesson();\n"
                  },
                  "endLine": 34,
                  "startLine": 33
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-352",
          "ruleIndex": 6
        },
        {
          "message": {
            "text": "Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks \nAt RestartLessonService.java:[lines 42-63] \nIn class org.owasp.webgoat.service.RestartLessonService \nIn method org.owasp.webgoat.service.RestartLessonService.restartLesson() \nAt RestartLessonService.java:[lines 53-63]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        Lesson al = webSession.getCurrentLesson();\n"
                  },
                  "startLine": 53
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-container/src/main/java/org/owasp/webgoat/service/RestartLessonService.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    public void restartLesson() {\n        Lesson al = webSession.getCurrentLesson();\n"
                  },
                  "endLine": 53,
                  "startLine": 52
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-352",
          "ruleIndex": 6
        },
        {
          "message": {
            "text": "Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks \nAt SessionService.java:[lines 17-31] \nIn class org.owasp.webgoat.service.SessionService \nIn method org.owasp.webgoat.service.SessionService.applySecurity() \nAt SessionService.java:[lines 27-31]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        webSession.toggleSecurity();\n"
                  },
                  "startLine": 27
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-container/src/main/java/org/owasp/webgoat/service/SessionService.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    public String applySecurity() {\n        webSession.toggleSecurity();\n"
                  },
                  "endLine": 27,
                  "startLine": 26
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-352",
          "ruleIndex": 6
        },
        {
          "message": {
            "text": "Cookie without the HttpOnly flag could be read by a malicious script in the browser \nAt SpoofCookieAssignment.java:[lines 50-118] \nIn class org.owasp.webgoat.spoofcookie.SpoofCookieAssignment \nIn method org.owasp.webgoat.spoofcookie.SpoofCookieAssignment.cleanup(HttpServletResponse) \nAt SpoofCookieAssignment.java:[line 79]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        Cookie cookie = new Cookie(COOKIE_NAME, \"\");\n"
                  },
                  "startLine": 79
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/spoof-cookie/src/main/java/org/owasp/webgoat/spoofcookie/SpoofCookieAssignment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    public void cleanup(HttpServletResponse response) {\n        Cookie cookie = new Cookie(COOKIE_NAME, \"\");\n"
                  },
                  "endLine": 79,
                  "startLine": 78
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "HTTPONLY_COOKIE",
          "ruleIndex": 13
        },
        {
          "message": {
            "text": "Cookie without the HttpOnly flag could be read by a malicious script in the browser \nAt SpoofCookieAssignment.java:[lines 50-118] \nIn class org.owasp.webgoat.spoofcookie.SpoofCookieAssignment \nIn method org.owasp.webgoat.spoofcookie.SpoofCookieAssignment.credentialsLoginFlow(String, String, HttpServletResponse) \nAt SpoofCookieAssignment.java:[line 93]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            Cookie newCookie = new Cookie(COOKIE_NAME, newCookieValue);\n"
                  },
                  "startLine": 93
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/spoof-cookie/src/main/java/org/owasp/webgoat/spoofcookie/SpoofCookieAssignment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            String newCookieValue = EncDec.encode(lowerCasedUsername);\n            Cookie newCookie = new Cookie(COOKIE_NAME, newCookieValue);\n"
                  },
                  "endLine": 93,
                  "startLine": 92
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "HTTPONLY_COOKIE",
          "ruleIndex": 13
        },
        {
          "message": {
            "text": "Cookie without the secure flag could be sent in clear text if a HTTP URL is visited \nAt SpoofCookieAssignment.java:[lines 50-118] \nIn class org.owasp.webgoat.spoofcookie.SpoofCookieAssignment \nIn method org.owasp.webgoat.spoofcookie.SpoofCookieAssignment.cleanup(HttpServletResponse) \nAt SpoofCookieAssignment.java:[line 79]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        Cookie cookie = new Cookie(COOKIE_NAME, \"\");\n"
                  },
                  "startLine": 79
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/spoof-cookie/src/main/java/org/owasp/webgoat/spoofcookie/SpoofCookieAssignment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    public void cleanup(HttpServletResponse response) {\n        Cookie cookie = new Cookie(COOKIE_NAME, \"\");\n"
                  },
                  "endLine": 79,
                  "startLine": 78
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-614",
          "ruleIndex": 14
        },
        {
          "message": {
            "text": "Cookie without the HttpOnly flag could be read by a malicious script in the browser \nAt SpoofCookieAssignmentTest.java:[lines 59-202] \nIn class org.owasp.webgoat.spoofcookie.SpoofCookieAssignmentTest \nIn method org.owasp.webgoat.spoofcookie.SpoofCookieAssignmentTest.cookieLoginNotSolvedFlow(String) \nAt SpoofCookieAssignmentTest.java:[line 114]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        Cookie cookie = new Cookie(COOKIE_NAME, cookieValue);\n"
                  },
                  "startLine": 114
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/spoof-cookie/src/test/java/org/owasp/webgoat/spoofcookie/SpoofCookieAssignmentTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    void cookieLoginNotSolvedFlow(String cookieValue) throws Exception {\n        Cookie cookie = new Cookie(COOKIE_NAME, cookieValue);\n"
                  },
                  "endLine": 114,
                  "startLine": 113
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "HTTPONLY_COOKIE",
          "ruleIndex": 13
        },
        {
          "message": {
            "text": "Cookie without the HttpOnly flag could be read by a malicious script in the browser \nAt SpoofCookieAssignmentTest.java:[lines 59-202] \nIn class org.owasp.webgoat.spoofcookie.SpoofCookieAssignmentTest \nIn method org.owasp.webgoat.spoofcookie.SpoofCookieAssignmentTest.success() \nAt SpoofCookieAssignmentTest.java:[line 76]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        Cookie cookie = new Cookie(COOKIE_NAME, \"NjI2MTcwNGI3YTQxNGE1OTU2NzQ2ZDZmNzQ=\");\n"
                  },
                  "startLine": 76
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/spoof-cookie/src/test/java/org/owasp/webgoat/spoofcookie/SpoofCookieAssignmentTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    void success() throws Exception {\n        Cookie cookie = new Cookie(COOKIE_NAME, \"NjI2MTcwNGI3YTQxNGE1OTU2NzQ2ZDZmNzQ=\");\n"
                  },
                  "endLine": 76,
                  "startLine": 75
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "HTTPONLY_COOKIE",
          "ruleIndex": 13
        },
        {
          "message": {
            "text": "Cookie without the secure flag could be sent in clear text if a HTTP URL is visited \nAt SpoofCookieAssignmentTest.java:[lines 59-202] \nIn class org.owasp.webgoat.spoofcookie.SpoofCookieAssignmentTest \nIn method org.owasp.webgoat.spoofcookie.SpoofCookieAssignmentTest.cookieLoginNotSolvedFlow(String) \nAt SpoofCookieAssignmentTest.java:[line 114]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        Cookie cookie = new Cookie(COOKIE_NAME, cookieValue);\n"
                  },
                  "startLine": 114
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/spoof-cookie/src/test/java/org/owasp/webgoat/spoofcookie/SpoofCookieAssignmentTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    void cookieLoginNotSolvedFlow(String cookieValue) throws Exception {\n        Cookie cookie = new Cookie(COOKIE_NAME, cookieValue);\n"
                  },
                  "endLine": 114,
                  "startLine": 113
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-614",
          "ruleIndex": 14
        },
        {
          "message": {
            "text": "Cookie without the secure flag could be sent in clear text if a HTTP URL is visited \nAt SpoofCookieAssignmentTest.java:[lines 59-202] \nIn class org.owasp.webgoat.spoofcookie.SpoofCookieAssignmentTest \nIn method org.owasp.webgoat.spoofcookie.SpoofCookieAssignmentTest.success() \nAt SpoofCookieAssignmentTest.java:[line 76]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        Cookie cookie = new Cookie(COOKIE_NAME, \"NjI2MTcwNGI3YTQxNGE1OTU2NzQ2ZDZmNzQ=\");\n"
                  },
                  "startLine": 76
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/spoof-cookie/src/test/java/org/owasp/webgoat/spoofcookie/SpoofCookieAssignmentTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    void success() throws Exception {\n        Cookie cookie = new Cookie(COOKIE_NAME, \"NjI2MTcwNGI3YTQxNGE1OTU2NzQ2ZDZmNzQ=\");\n"
                  },
                  "endLine": 76,
                  "startLine": 75
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-614",
          "ruleIndex": 14
        },
        {
          "message": {
            "text": "This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC) \nAt SqlInjectionChallenge.java:[lines 44-95] \nIn class org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge \nIn method org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge.registerNewUser(String, String, String) \nAt SqlInjectionChallenge.java:[line 65] \nSink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                ResultSet resultSet = statement.executeQuery(checkUserQuery);\n"
                  },
                  "startLine": 65
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                Statement statement = connection.createStatement();\n                ResultSet resultSet = statement.executeQuery(checkUserQuery);\n"
                  },
                  "endLine": 65,
                  "startLine": 64
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-89",
          "ruleIndex": 9
        },
        {
          "message": {
            "text": "This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC) \nAt SqlInjectionLesson6a.java:[lines 45-96] \nIn class org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a \nIn method org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a.injectableQuery(String) \nAt SqlInjectionLesson6a.java:[line 67] \nSink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                ResultSet results = statement.executeQuery(query);\n"
                  },
                  "startLine": 67
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionLesson6a.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    ResultSet.CONCUR_READ_ONLY)) {\n                ResultSet results = statement.executeQuery(query);\n"
                  },
                  "endLine": 67,
                  "startLine": 66
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-89",
          "ruleIndex": 9
        },
        {
          "message": {
            "text": "This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC) \nAt SqlInjectionLesson10.java:[lines 46-101] \nIn class org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10 \nIn method org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10.injectableQueryAvailability(String) \nAt SqlInjectionLesson10.java:[line 63] \nSink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                ResultSet results = statement.executeQuery(query);\n"
                  },
                  "startLine": 63
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                Statement statement = connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);\n                ResultSet results = statement.executeQuery(query);\n"
                  },
                  "endLine": 63,
                  "startLine": 62
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-89",
          "ruleIndex": 9
        },
        {
          "message": {
            "text": "This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC) \nAt SqlInjectionLesson2.java:[lines 49-75] \nIn class org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2 \nIn method org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2.injectableQuery(String) \nAt SqlInjectionLesson2.java:[line 62] \nSink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; \nSink parameter 0 \nUnknown source org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.injectableQuery(Ljava/lang/String;)Lorg/owasp/webgoat/assignments/AttackResult; parameter 0 \nMethod usage with tainted arguments detected \nAt SqlInjectionLesson2.java:[line 56]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            ResultSet results = statement.executeQuery(query);\n"
                  },
                  "startLine": 62
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            Statement statement = connection.createStatement(TYPE_SCROLL_INSENSITIVE, CONCUR_READ_ONLY);\n            ResultSet results = statement.executeQuery(query);\n"
                  },
                  "endLine": 62,
                  "startLine": 61
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-89",
          "ruleIndex": 9
        },
        {
          "message": {
            "text": "This use of java/sql/Statement.executeUpdate(Ljava/lang/String;)I can be vulnerable to SQL injection (with JDBC) \nAt SqlInjectionLesson3.java:[lines 50-82] \nIn class org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3 \nIn method org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3.injectableQuery(String) \nAt SqlInjectionLesson3.java:[line 65] \nSink method java/sql/Statement.executeUpdate(Ljava/lang/String;)I \nSink parameter 0 \nUnknown source org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.injectableQuery(Ljava/lang/String;)Lorg/owasp/webgoat/assignments/AttackResult; parameter 0 \nMethod usage with tainted arguments detected \nAt SqlInjectionLesson3.java:[line 57]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                statement.executeUpdate(query);\n"
                  },
                  "startLine": 65
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                        CONCUR_READ_ONLY);\n                statement.executeUpdate(query);\n"
                  },
                  "endLine": 65,
                  "startLine": 64
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-89",
          "ruleIndex": 9
        },
        {
          "message": {
            "text": "This use of java/sql/Statement.executeUpdate(Ljava/lang/String;)I can be vulnerable to SQL injection (with JDBC) \nAt SqlInjectionLesson4.java:[lines 50-78] \nIn class org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4 \nIn method org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4.injectableQuery(String) \nAt SqlInjectionLesson4.java:[line 63] \nSink method java/sql/Statement.executeUpdate(Ljava/lang/String;)I \nSink parameter 0 \nUnknown source org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.injectableQuery(Ljava/lang/String;)Lorg/owasp/webgoat/assignments/AttackResult; parameter 0 \nMethod usage with tainted arguments detected \nAt SqlInjectionLesson4.java:[line 57]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                statement.executeUpdate(query);\n"
                  },
                  "startLine": 63
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            try (Statement statement = connection.createStatement(TYPE_SCROLL_INSENSITIVE, CONCUR_READ_ONLY)) {\n                statement.executeUpdate(query);\n"
                  },
                  "endLine": 63,
                  "startLine": 62
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-89",
          "ruleIndex": 9
        },
        {
          "message": {
            "text": "This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC) \nAt SqlInjectionLesson5.java:[lines 47-91] \nIn class org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5 \nIn method org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5.injectableQuery(String) \nAt SqlInjectionLesson5.java:[line 72] \nSink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; \nSink parameter 0 \nUnknown source org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.injectableQuery(Ljava/lang/String;)Lorg/owasp/webgoat/assignments/AttackResult; parameter 0 \nMethod usage not detected \nAt SqlInjectionLesson5.java:[line 66]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                statement.executeQuery(query);\n"
                  },
                  "startLine": 72
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            try (Statement statement = connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE)) {\n                statement.executeQuery(query);\n"
                  },
                  "endLine": 72,
                  "startLine": 71
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-89",
          "ruleIndex": 9
        },
        {
          "message": {
            "text": "This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC) \nAt SqlInjectionLesson5a.java:[lines 47-118] \nIn class org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a \nIn method org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a.injectableQuery(String) \nAt SqlInjectionLesson5a.java:[line 62] \nSink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                ResultSet results = statement.executeQuery(query);\n"
                  },
                  "startLine": 62
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            try (Statement statement = connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE)) {\n                ResultSet results = statement.executeQuery(query);\n"
                  },
                  "endLine": 62,
                  "startLine": 61
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-89",
          "ruleIndex": 9
        },
        {
          "message": {
            "text": "This use of java/sql/Connection.prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC) \nAt SqlInjectionLesson5b.java:[lines 45-95] \nIn class org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b \nIn method org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b.injectableQuery(String, String) \nAt SqlInjectionLesson5b.java:[line 58] \nSink method java/sql/Connection.prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement; \nSink parameter 2."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            PreparedStatement query = connection.prepareStatement(queryString, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);\n"
                  },
                  "startLine": 58
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        try (Connection connection = dataSource.getConnection()) {\n            PreparedStatement query = connection.prepareStatement(queryString, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);\n"
                  },
                  "endLine": 58,
                  "startLine": 57
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-89",
          "ruleIndex": 9
        },
        {
          "message": {
            "text": "This use of java/sql/Statement.executeUpdate(Ljava/lang/String;)I can be vulnerable to SQL injection (with JDBC) \nAt SqlInjectionLesson8.java:[lines 48-142] \nIn class org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8 \nIn method org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(Connection, String) \nAt SqlInjectionLesson8.java:[line 138] \nSink method java/sql/Statement.executeUpdate(Ljava/lang/String;)I \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            statement.executeUpdate(logQuery);\n"
                  },
                  "startLine": 138
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            Statement statement = connection.createStatement(TYPE_SCROLL_SENSITIVE, CONCUR_UPDATABLE);\n            statement.executeUpdate(logQuery);\n"
                  },
                  "endLine": 138,
                  "startLine": 137
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-89",
          "ruleIndex": 9
        },
        {
          "message": {
            "text": "This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC) \nAt Servers.java:[lines 44-78] \nIn class org.owasp.webgoat.sql_injection.mitigation.Servers \nIn method org.owasp.webgoat.sql_injection.mitigation.Servers.sort(String) \nAt Servers.java:[line 71] \nSink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "             PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {\n"
                  },
                  "startLine": 71
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        try (Connection connection = dataSource.getConnection();\n             PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {\n"
                  },
                  "endLine": 71,
                  "startLine": 70
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-89",
          "ruleIndex": 9
        },
        {
          "message": {
            "text": "This web server request could be used by an attacker to expose internal services and filesystem. \nAt SSRFTask2.java:[lines 42-76] \nIn class org.owasp.webgoat.ssrf.SSRFTask2 \nIn method org.owasp.webgoat.ssrf.SSRFTask2.furBall(String) \nAt SSRFTask2.java:[line 53] \nSink method java/net/URL.openStream()Ljava/io/InputStream; \nSink parameter 0 \nUnknown source java/net/URL.<init>(Ljava/lang/String;)V \nUnknown source org/owasp/webgoat/ssrf/SSRFTask2.furBall(Ljava/lang/String;)Lorg/owasp/webgoat/assignments/AttackResult; parameter 0 \nMethod usage with tainted arguments detected \nAt SSRFTask2.java:[line 47] \nAt SSRFTask2.java:[line 53]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            try (InputStream in = new URL(url).openStream()) {\n"
                  },
                  "startLine": 53
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/ssrf/src/main/java/org/owasp/webgoat/ssrf/SSRFTask2.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            String html;\n            try (InputStream in = new URL(url).openStream()) {\n"
                  },
                  "endLine": 53,
                  "startLine": 52
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-918",
          "ruleIndex": 15
        },
        {
          "message": {
            "text": "This use of org/springframework/jdbc/core/JdbcTemplate.execute(Ljava/lang/String;)V can be vulnerable to SQL injection (with Spring JDBC) \nAt UserService.java:[lines 19-56] \nIn class org.owasp.webgoat.users.UserService \nIn method org.owasp.webgoat.users.UserService.createLessonsForUser(WebGoatUser) \nAt UserService.java:[line 51] \nSink method org/springframework/jdbc/core/JdbcTemplate.execute(Ljava/lang/String;)V \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        jdbcTemplate.execute(\"CREATE SCHEMA \\\"\" + webGoatUser.getUsername() + \"\\\" authorization dba\");\n"
                  },
                  "startLine": 51
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-container/src/main/java/org/owasp/webgoat/users/UserService.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    private void createLessonsForUser(WebGoatUser webGoatUser) {\n        jdbcTemplate.execute(\"CREATE SCHEMA \\\"\" + webGoatUser.getUsername() + \"\\\" authorization dba\");\n"
                  },
                  "endLine": 51,
                  "startLine": 50
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-89",
          "ruleIndex": 9
        },
        {
          "message": {
            "text": "Hard coded password found \nAt UserValidatorTest.java:[lines 16-58] \nIn class org.owasp.webgoat.users.UserValidatorTest \nIn method org.owasp.webgoat.users.UserValidatorTest.passwordsShouldMatch() \nAt UserValidatorTest.java:[line 26] \nSink method org/owasp/webgoat/users/UserForm.setPassword(Ljava/lang/String;)V \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        userForm.setPassword(\"test1234\");\n"
                  },
                  "startLine": 26
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-container/src/test/java/org/owasp/webgoat/users/UserValidatorTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        userForm.setUsername(\"test1234\");\n        userForm.setPassword(\"test1234\");\n"
                  },
                  "endLine": 26,
                  "startLine": 25
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-259",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Hard coded password found \nAt UserValidatorTest.java:[lines 16-58] \nIn class org.owasp.webgoat.users.UserValidatorTest \nIn method org.owasp.webgoat.users.UserValidatorTest.passwordsShouldMatch() \nAt UserValidatorTest.java:[line 27] \nSink method org/owasp/webgoat/users/UserForm.setMatchingPassword(Ljava/lang/String;)V \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        userForm.setMatchingPassword(\"test1234\");\n"
                  },
                  "startLine": 27
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-container/src/test/java/org/owasp/webgoat/users/UserValidatorTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        userForm.setPassword(\"test1234\");\n        userForm.setMatchingPassword(\"test1234\");\n"
                  },
                  "endLine": 27,
                  "startLine": 26
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-259",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Hard coded password found \nAt UserValidatorTest.java:[lines 16-58] \nIn class org.owasp.webgoat.users.UserValidatorTest \nIn method org.owasp.webgoat.users.UserValidatorTest.shouldGiveErrorWhenPasswordsDoNotMatch() \nAt UserValidatorTest.java:[line 38] \nSink method org/owasp/webgoat/users/UserForm.setPassword(Ljava/lang/String;)V \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        userForm.setPassword(\"test12345\");\n"
                  },
                  "startLine": 38
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-container/src/test/java/org/owasp/webgoat/users/UserValidatorTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        userForm.setUsername(\"test1234\");\n        userForm.setPassword(\"test12345\");\n"
                  },
                  "endLine": 38,
                  "startLine": 37
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-259",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Hard coded password found \nAt UserValidatorTest.java:[lines 16-58] \nIn class org.owasp.webgoat.users.UserValidatorTest \nIn method org.owasp.webgoat.users.UserValidatorTest.shouldGiveErrorWhenPasswordsDoNotMatch() \nAt UserValidatorTest.java:[line 39] \nSink method org/owasp/webgoat/users/UserForm.setMatchingPassword(Ljava/lang/String;)V \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        userForm.setMatchingPassword(\"test1234\");\n"
                  },
                  "startLine": 39
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-container/src/test/java/org/owasp/webgoat/users/UserValidatorTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        userForm.setPassword(\"test12345\");\n        userForm.setMatchingPassword(\"test1234\");\n"
                  },
                  "endLine": 39,
                  "startLine": 38
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-259",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Hard coded password found \nAt UserValidatorTest.java:[lines 16-58] \nIn class org.owasp.webgoat.users.UserValidatorTest \nIn method org.owasp.webgoat.users.UserValidatorTest.shouldGiveErrorWhenUserAlreadyExists() \nAt UserValidatorTest.java:[line 51] \nSink method org/owasp/webgoat/users/UserForm.setPassword(Ljava/lang/String;)V \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        userForm.setPassword(\"test12345\");\n"
                  },
                  "startLine": 51
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-container/src/test/java/org/owasp/webgoat/users/UserValidatorTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        userForm.setUsername(\"test12345\");\n        userForm.setPassword(\"test12345\");\n"
                  },
                  "endLine": 51,
                  "startLine": 50
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-259",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Hard coded password found \nAt UserValidatorTest.java:[lines 16-58] \nIn class org.owasp.webgoat.users.UserValidatorTest \nIn method org.owasp.webgoat.users.UserValidatorTest.shouldGiveErrorWhenUserAlreadyExists() \nAt UserValidatorTest.java:[line 52] \nSink method org/owasp/webgoat/users/UserForm.setMatchingPassword(Ljava/lang/String;)V \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        userForm.setMatchingPassword(\"test12345\");\n"
                  },
                  "startLine": 52
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-container/src/test/java/org/owasp/webgoat/users/UserValidatorTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        userForm.setPassword(\"test12345\");\n        userForm.setMatchingPassword(\"test12345\");\n"
                  },
                  "endLine": 52,
                  "startLine": 51
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-259",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "This use of org/slf4j/Logger.debug(Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt CrossSiteScriptingLesson4.java:[lines 38-59] \nIn class org.owasp.webgoat.xss.CrossSiteScriptingLesson4 \nIn method org.owasp.webgoat.xss.CrossSiteScriptingLesson4.completed(String) \nAt CrossSiteScriptingLesson4.java:[line 47] \nSink method org/slf4j/Logger.debug(Ljava/lang/String;)V \nSink parameter 0 \nTainted source org/owasp/webgoat/xss/CrossSiteScriptingLesson4.completed(Ljava/lang/String;)Lorg/owasp/webgoat/assignments/AttackResult; parameter 0 \nAt CrossSiteScriptingLesson4.java:[line 46]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        log.debug(editor);\n"
                  },
                  "startLine": 47
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/cross-site-scripting/src/main/java/org/owasp/webgoat/xss/CrossSiteScriptingLesson4.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        String editor = editor2.replaceAll(\"\\\\<.*?>\", \"\");\n        log.debug(editor);\n"
                  },
                  "endLine": 47,
                  "startLine": 46
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-117",
          "ruleIndex": 1
        },
        {
          "message": {
            "text": "This API (java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt BlindSendFileAssignment.java:[lines 53-94] \nIn class org.owasp.webgoat.xxe.BlindSendFileAssignment \nIn method org.owasp.webgoat.xxe.BlindSendFileAssignment.createSecretFileWithRandomContents() \nAt BlindSendFileAssignment.java:[line 66] \nSink method java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 1 \nUnknown source org/owasp/webgoat/xxe/BlindSendFileAssignment.webGoatHomeDirectory \nAt BlindSendFileAssignment.java:[line 66]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        File targetDirectory = new File(webGoatHomeDirectory, \"/XXE\");\n"
                  },
                  "startLine": 66
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/xxe/src/main/java/org/owasp/webgoat/xxe/BlindSendFileAssignment.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    public void createSecretFileWithRandomContents() {\n        File targetDirectory = new File(webGoatHomeDirectory, \"/XXE\");\n"
                  },
                  "endLine": 66,
                  "startLine": 65
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-22",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "This API (java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt BlindSendFileAssignmentTest.java:[lines 32-150] \nIn class org.owasp.webgoat.xxe.BlindSendFileAssignmentTest \nIn method org.owasp.webgoat.xxe.BlindSendFileAssignmentTest.simpleXXEShouldNotWork() \nAt BlindSendFileAssignmentTest.java:[line 77] \nSink method java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 1 \nUnknown source org/owasp/webgoat/xxe/BlindSendFileAssignmentTest.webGoatHomeDirectory \nAt BlindSendFileAssignmentTest.java:[line 77]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        File targetFile = new File(webGoatHomeDirectory, \"/XXE/secret.txt\");\n"
                  },
                  "startLine": 77
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/xxe/src/test/java/org/owasp/webgoat/xxe/BlindSendFileAssignmentTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    public void simpleXXEShouldNotWork() throws Exception {\n        File targetFile = new File(webGoatHomeDirectory, \"/XXE/secret.txt\");\n"
                  },
                  "endLine": 77,
                  "startLine": 76
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-22",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "This API (java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt BlindSendFileAssignmentTest.java:[lines 32-150] \nIn class org.owasp.webgoat.xxe.BlindSendFileAssignmentTest \nIn method org.owasp.webgoat.xxe.BlindSendFileAssignmentTest.solve() \nAt BlindSendFileAssignmentTest.java:[line 87] \nSink method java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 1 \nUnknown source org/owasp/webgoat/xxe/BlindSendFileAssignmentTest.webGoatHomeDirectory \nAt BlindSendFileAssignmentTest.java:[line 87]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        File targetFile = new File(webGoatHomeDirectory, \"/XXE/secret.txt\");\n"
                  },
                  "startLine": 87
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/xxe/src/test/java/org/owasp/webgoat/xxe/BlindSendFileAssignmentTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    public void solve() throws Exception {\n        File targetFile = new File(webGoatHomeDirectory, \"/XXE/secret.txt\");\n"
                  },
                  "endLine": 87,
                  "startLine": 86
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-22",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "This API (java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt BlindSendFileAssignmentTest.java:[lines 32-150] \nIn class org.owasp.webgoat.xxe.BlindSendFileAssignmentTest \nIn method org.owasp.webgoat.xxe.BlindSendFileAssignmentTest.solveOnlyParamReferenceEntityInExternalDTD() \nAt BlindSendFileAssignmentTest.java:[line 111] \nSink method java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 1 \nUnknown source org/owasp/webgoat/xxe/BlindSendFileAssignmentTest.webGoatHomeDirectory \nAt BlindSendFileAssignmentTest.java:[line 111]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        File targetFile = new File(webGoatHomeDirectory, \"/XXE/secret.txt\");\n"
                  },
                  "startLine": 111
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/xxe/src/test/java/org/owasp/webgoat/xxe/BlindSendFileAssignmentTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    public void solveOnlyParamReferenceEntityInExternalDTD() throws Exception {\n        File targetFile = new File(webGoatHomeDirectory, \"/XXE/secret.txt\");\n"
                  },
                  "endLine": 111,
                  "startLine": 110
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-22",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "The XML parsing is vulnerable to XML External Entity attacks \nAt Comments.java:[lines 60-126] \nIn class org.owasp.webgoat.xxe.Comments \nIn method org.owasp.webgoat.xxe.Comments.parseXml(String) \nAt Comments.java:[line 101]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        var xsr = xif.createXMLStreamReader(new StringReader(xml));\n"
                  },
                  "startLine": 101
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/xxe/src/main/java/org/owasp/webgoat/xxe/Comments.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        var xsr = xif.createXMLStreamReader(new StringReader(xml));\n"
                  },
                  "endLine": 101,
                  "startLine": 100
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-611",
          "ruleIndex": 16
        },
        {
          "message": {
            "text": "This use of org/slf4j/Logger.debug(Ljava/lang/String;)V might be used to include CRLF characters into log messages \nAt Ping.java:[lines 39-60] \nIn class org.owasp.webgoat.xxe.Ping \nIn method org.owasp.webgoat.xxe.Ping.logRequest(String, String) \nAt Ping.java:[line 51] \nSink method org/slf4j/Logger.debug(Ljava/lang/String;)V \nSink parameter 0 \nTainted source org/owasp/webgoat/xxe/Ping.logRequest(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0 \nTainted source org/owasp/webgoat/xxe/Ping.logRequest(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1 \nAt Ping.java:[line 50]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        log.debug(logLine);\n"
                  },
                  "startLine": 51
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/xxe/src/main/java/org/owasp/webgoat/xxe/Ping.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        String logLine = String.format(\"%s %s %s\", \"GET\", userAgent, text);\n        log.debug(logLine);\n"
                  },
                  "endLine": 51,
                  "startLine": 50
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-117",
          "ruleIndex": 1
        },
        {
          "message": {
            "text": "This API (java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt Ping.java:[lines 39-60] \nIn class org.owasp.webgoat.xxe.Ping \nIn method org.owasp.webgoat.xxe.Ping.logRequest(String, String) \nAt Ping.java:[line 52] \nSink method java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        File logFile = new File(webGoatHomeDirectory, \"/XXE/log\" + webSession.getUserName() + \".txt\");\n"
                  },
                  "startLine": 52
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/xxe/src/main/java/org/owasp/webgoat/xxe/Ping.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        log.debug(logLine);\n        File logFile = new File(webGoatHomeDirectory, \"/XXE/log\" + webSession.getUserName() + \".txt\");\n"
                  },
                  "endLine": 52,
                  "startLine": 51
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-22",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks \nAt SimpleXXE.java:[lines 51-100] \nIn class org.owasp.webgoat.xxe.SimpleXXE \nIn method org.owasp.webgoat.xxe.SimpleXXE.getSampleDTDFile() \nAt SimpleXXE.java:[line 100]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        return \"\"\"\n"
                  },
                  "startLine": 100
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/xxe/src/main/java/org/owasp/webgoat/xxe/SimpleXXE.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    public String getSampleDTDFile() {\n        return \"\"\"\n"
                  },
                  "endLine": 100,
                  "startLine": 99
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-352",
          "ruleIndex": 6
        },
        {
          "message": {
            "text": "Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks \nAt SimpleXXE.java:[lines 51-100] \nIn class org.owasp.webgoat.xxe.SimpleXXE \nIn method org.owasp.webgoat.xxe.SimpleXXE.getWebGoatHomeDirectory() \nAt SimpleXXE.java:[line 94]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        return webGoatHomeDirectory;\n"
                  },
                  "startLine": 94
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webgoat-lessons/xxe/src/main/java/org/owasp/webgoat/xxe/SimpleXXE.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    public String getWebGoatHomeDirectory() {\n        return webGoatHomeDirectory;\n"
                  },
                  "endLine": 94,
                  "startLine": 93
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-352",
          "ruleIndex": 6
        },
        {
          "message": {
            "text": "This API (java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileServer.java:[lines 52-119] \nIn class org.owasp.webwolf.FileServer \nIn method org.owasp.webwolf.FileServer.getFiles(HttpServletRequest) \nAt FileServer.java:[line 97] \nSink method java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/owasp/webwolf/user/WebGoatUser.getUsername()Ljava/lang/String; \nUnknown source org/owasp/webwolf/user/WebGoatUser.username \nAt FileServer.java:[line 96] \nAt WebGoatUser.java:[line 49]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        File destinationDir = new File(fileLocation, username);\n"
                  },
                  "startLine": 97
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webwolf/src/main/java/org/owasp/webwolf/FileServer.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        String username = user.getUsername();\n        File destinationDir = new File(fileLocation, username);\n"
                  },
                  "endLine": 97,
                  "startLine": 96
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-22",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileServer.java:[lines 52-119] \nIn class org.owasp.webwolf.FileServer \nIn method org.owasp.webwolf.FileServer.getFiles(HttpServletRequest) \nAt FileServer.java:[line 101] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        File changeIndicatorFile = new File(destinationDir, user.getUsername() + \"_changed\");\n"
                  },
                  "startLine": 101
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webwolf/src/main/java/org/owasp/webwolf/FileServer.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        modelAndView.setViewName(\"files\");\n        File changeIndicatorFile = new File(destinationDir, user.getUsername() + \"_changed\");\n"
                  },
                  "endLine": 101,
                  "startLine": 100
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-22",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "This API (java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileServer.java:[lines 52-119] \nIn class org.owasp.webwolf.FileServer \nIn method org.owasp.webwolf.FileServer.importFile(MultipartFile) \nAt FileServer.java:[line 71] \nSink method java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/owasp/webwolf/user/WebGoatUser.getUsername()Ljava/lang/String; \nUnknown source org/owasp/webwolf/user/WebGoatUser.username \nAt FileServer.java:[line 71] \nAt WebGoatUser.java:[line 49]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        File destinationDir = new File(fileLocation, user.getUsername());\n"
                  },
                  "startLine": 71
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webwolf/src/main/java/org/owasp/webwolf/FileServer.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        WebGoatUser user = (WebGoatUser) SecurityContextHolder.getContext().getAuthentication().getPrincipal();\n        File destinationDir = new File(fileLocation, user.getUsername());\n"
                  },
                  "endLine": 71,
                  "startLine": 70
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-22",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileServer.java:[lines 52-119] \nIn class org.owasp.webwolf.FileServer \nIn method org.owasp.webwolf.FileServer.importFile(MultipartFile) \nAt FileServer.java:[line 73] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/springframework/web/multipart/MultipartFile.getOriginalFilename()Ljava/lang/String;."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        myFile.transferTo(new File(destinationDir, myFile.getOriginalFilename()));\n"
                  },
                  "startLine": 73
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webwolf/src/main/java/org/owasp/webwolf/FileServer.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        destinationDir.mkdirs();\n        myFile.transferTo(new File(destinationDir, myFile.getOriginalFilename()));\n"
                  },
                  "endLine": 73,
                  "startLine": 72
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-22",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileServer.java:[lines 52-119] \nIn class org.owasp.webwolf.FileServer \nIn method org.owasp.webwolf.FileServer.importFile(MultipartFile) \nAt FileServer.java:[line 74] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/springframework/web/multipart/MultipartFile.getOriginalFilename()Ljava/lang/String;."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        log.debug(\"File saved to {}\", new File(destinationDir, myFile.getOriginalFilename()));\n"
                  },
                  "startLine": 74
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webwolf/src/main/java/org/owasp/webwolf/FileServer.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        myFile.transferTo(new File(destinationDir, myFile.getOriginalFilename()));\n        log.debug(\"File saved to {}\", new File(destinationDir, myFile.getOriginalFilename()));\n"
                  },
                  "endLine": 74,
                  "startLine": 73
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-22",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt FileServer.java:[lines 52-119] \nIn class org.owasp.webwolf.FileServer \nIn method org.owasp.webwolf.FileServer.importFile(MultipartFile) \nAt FileServer.java:[line 75] \nSink method java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        Files.createFile(new File(destinationDir, user.getUsername() + \"_changed\").toPath());\n"
                  },
                  "startLine": 75
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webwolf/src/main/java/org/owasp/webwolf/FileServer.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        log.debug(\"File saved to {}\", new File(destinationDir, myFile.getOriginalFilename()));\n        Files.createFile(new File(destinationDir, user.getUsername() + \"_changed\").toPath());\n"
                  },
                  "endLine": 75,
                  "startLine": 74
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-22",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks \nAt FileServer.java:[lines 52-119] \nIn class org.owasp.webwolf.FileServer \nIn method org.owasp.webwolf.FileServer.getFileLocation() \nAt FileServer.java:[line 65]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        return fileLocation;\n"
                  },
                  "startLine": 65
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webwolf/src/main/java/org/owasp/webwolf/FileServer.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    public String getFileLocation() {\n        return fileLocation;\n"
                  },
                  "endLine": 65,
                  "startLine": 64
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-352",
          "ruleIndex": 6
        },
        {
          "message": {
            "text": "This API (java/io/File.<init>(Ljava/lang/String;)V) reads a file whose location might be specified by user input \nAt MvcConfiguration.java:[lines 44-66] \nIn class org.owasp.webwolf.MvcConfiguration \nIn method org.owasp.webwolf.MvcConfiguration.createDirectory() \nAt MvcConfiguration.java:[line 62] \nSink method java/io/File.<init>(Ljava/lang/String;)V \nSink parameter 0 \nUnknown source org/owasp/webwolf/MvcConfiguration.fileLocatation \nAt MvcConfiguration.java:[line 62]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        File file = new File(fileLocatation);\n"
                  },
                  "startLine": 62
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webwolf/src/main/java/org/owasp/webwolf/MvcConfiguration.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    public void createDirectory() {\n        File file = new File(fileLocatation);\n"
                  },
                  "endLine": 62,
                  "startLine": 61
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-22",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "Disabling Spring Security's CSRF protection is unsafe for standard web applications \nAt WebSecurityConfig.java:[lines 43-87] \nIn class org.owasp.webwolf.WebSecurityConfig \nIn method org.owasp.webwolf.WebSecurityConfig.configure(HttpSecurity) \nAt WebSecurityConfig.java:[line 56]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        security.and().csrf().disable().formLogin()\n"
                  },
                  "startLine": 56
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webwolf/src/main/java/org/owasp/webwolf/WebSecurityConfig.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                .anyRequest().permitAll();\n        security.and().csrf().disable().formLogin()\n"
                  },
                  "endLine": 56,
                  "startLine": 55
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-352",
          "ruleIndex": 6
        },
        {
          "message": {
            "text": "Unencrypted socket to org.owasp.webwolf.WebWolf (instead of SSLSocket) \nAt WebWolf.java:[lines 37-70] \nIn class org.owasp.webwolf.WebWolf \nIn method org.owasp.webwolf.WebWolf.isAlreadyRunning(String, int) \nAt WebWolf.java:[line 67] \nValue remote host."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        try (var ignored = new Socket(host, port)) {\n"
                  },
                  "startLine": 67
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webwolf/src/main/java/org/owasp/webwolf/WebWolf.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    private static boolean isAlreadyRunning(String host, int port) {\n        try (var ignored = new Socket(host, port)) {\n"
                  },
                  "endLine": 67,
                  "startLine": 66
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-319",
          "ruleIndex": 8
        },
        {
          "message": {
            "text": "The persistent objects could be exploited by attacker to read sensitive information. \nAt MailboxController.java:[lines 44-67] \nIn class org.owasp.webwolf.mailbox.MailboxController \nIn method org.owasp.webwolf.mailbox.MailboxController.sendEmail(Email) \nAt MailboxController.java:[line 65]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        return () -> {\n"
                  },
                  "startLine": 65
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webwolf/src/main/java/org/owasp/webwolf/mailbox/MailboxController.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    public Callable<ResponseEntity<?>> sendEmail(@RequestBody Email email) {\n        return () -> {\n"
                  },
                  "endLine": 65,
                  "startLine": 64
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-915",
          "ruleIndex": 17
        },
        {
          "message": {
            "text": "This use of org/slf4j/Logger.trace(Ljava/lang/String;Ljava/lang/Object;)V might be used to include CRLF characters into log messages \nAt LandingPage.java:[lines 35-43] \nIn class org.owasp.webwolf.requests.LandingPage \nIn method org.owasp.webwolf.requests.LandingPage.lambda$ok$0(HttpServletRequest) \nAt LandingPage.java:[line 42] \nSink method org/slf4j/Logger.trace(Ljava/lang/String;Ljava/lang/Object;)V \nSink parameter 0 \nTainted source javax/servlet/http/HttpServletRequest.getRequestURL()Ljava/lang/StringBuffer; \nAt LandingPage.java:[line 42]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            log.trace(\"Incoming request for: {}\", request.getRequestURL());\n"
                  },
                  "startLine": 42
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webwolf/src/main/java/org/owasp/webwolf/requests/LandingPage.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        return () -> {\n            log.trace(\"Incoming request for: {}\", request.getRequestURL());\n"
                  },
                  "endLine": 42,
                  "startLine": 41
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-117",
          "ruleIndex": 1
        },
        {
          "message": {
            "text": "Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks \nAt LandingPage.java:[lines 35-43] \nIn class org.owasp.webwolf.requests.LandingPage \nIn method org.owasp.webwolf.requests.LandingPage.ok(HttpServletRequest) \nAt LandingPage.java:[line 41]."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        return () -> {\n"
                  },
                  "startLine": 41
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webwolf/src/main/java/org/owasp/webwolf/requests/LandingPage.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    public Callable<ResponseEntity<?>> ok(HttpServletRequest request) {\n        return () -> {\n"
                  },
                  "endLine": 41,
                  "startLine": 40
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "CRITICAL"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-352",
          "ruleIndex": 6
        },
        {
          "message": {
            "text": "Hard coded password found \nAt UserValidatorTest.java:[lines 36-95] \nIn class org.owasp.webwolf.user.UserValidatorTest \nIn method org.owasp.webwolf.user.UserValidatorTest.registerExistingUserAgainShouldFail() \nAt UserValidatorTest.java:[line 76] \nSink method org/owasp/webwolf/user/UserForm.setMatchingPassword(Ljava/lang/String;)V \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        validUserForm.setMatchingPassword(password);\n"
                  },
                  "startLine": 76
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webwolf/src/test/java/org/owasp/webwolf/user/UserValidatorTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        validUserForm.setUsername(username);\n        validUserForm.setMatchingPassword(password);\n"
                  },
                  "endLine": 76,
                  "startLine": 75
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-259",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Hard coded password found \nAt UserValidatorTest.java:[lines 36-95] \nIn class org.owasp.webwolf.user.UserValidatorTest \nIn method org.owasp.webwolf.user.UserValidatorTest.registerExistingUserAgainShouldFail() \nAt UserValidatorTest.java:[line 77] \nSink method org/owasp/webwolf/user/UserForm.setPassword(Ljava/lang/String;)V \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        validUserForm.setPassword(\"124\");\n"
                  },
                  "startLine": 77
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webwolf/src/test/java/org/owasp/webwolf/user/UserValidatorTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        validUserForm.setMatchingPassword(password);\n        validUserForm.setPassword(\"124\");\n"
                  },
                  "endLine": 77,
                  "startLine": 76
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-259",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Hard coded password found \nAt UserValidatorTest.java:[lines 36-95] \nIn class org.owasp.webwolf.user.UserValidatorTest \nIn method org.owasp.webwolf.user.UserValidatorTest.validUserFormShouldNotHaveErrors() \nAt UserValidatorTest.java:[line 48] \nSink method org/owasp/webwolf/user/UserForm.setMatchingPassword(Ljava/lang/String;)V \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        validUserForm.setMatchingPassword(\"123\");\n"
                  },
                  "startLine": 48
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webwolf/src/test/java/org/owasp/webwolf/user/UserValidatorTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        validUserForm.setUsername(\"guest\");\n        validUserForm.setMatchingPassword(\"123\");\n"
                  },
                  "endLine": 48,
                  "startLine": 47
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-259",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Hard coded password found \nAt UserValidatorTest.java:[lines 36-95] \nIn class org.owasp.webwolf.user.UserValidatorTest \nIn method org.owasp.webwolf.user.UserValidatorTest.validUserFormShouldNotHaveErrors() \nAt UserValidatorTest.java:[line 49] \nSink method org/owasp/webwolf/user/UserForm.setPassword(Ljava/lang/String;)V \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        validUserForm.setPassword(\"123\");\n"
                  },
                  "startLine": 49
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webwolf/src/test/java/org/owasp/webwolf/user/UserValidatorTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        validUserForm.setMatchingPassword(\"123\");\n        validUserForm.setPassword(\"123\");\n"
                  },
                  "endLine": 49,
                  "startLine": 48
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-259",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Hard coded password found \nAt UserValidatorTest.java:[lines 36-95] \nIn class org.owasp.webwolf.user.UserValidatorTest \nIn method org.owasp.webwolf.user.UserValidatorTest.whenPasswordDoNotMatchShouldFail() \nAt UserValidatorTest.java:[line 61] \nSink method org/owasp/webwolf/user/UserForm.setMatchingPassword(Ljava/lang/String;)V \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        validUserForm.setMatchingPassword(\"123\");\n"
                  },
                  "startLine": 61
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webwolf/src/test/java/org/owasp/webwolf/user/UserValidatorTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        validUserForm.setUsername(\"guest\");\n        validUserForm.setMatchingPassword(\"123\");\n"
                  },
                  "endLine": 61,
                  "startLine": 60
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-259",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Hard coded password found \nAt UserValidatorTest.java:[lines 36-95] \nIn class org.owasp.webwolf.user.UserValidatorTest \nIn method org.owasp.webwolf.user.UserValidatorTest.whenPasswordDoNotMatchShouldFail() \nAt UserValidatorTest.java:[line 62] \nSink method org/owasp/webwolf/user/UserForm.setPassword(Ljava/lang/String;)V \nSink parameter 0."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        validUserForm.setPassword(\"124\");\n"
                  },
                  "startLine": 62
                },
                "artifactLocation": {
                  "uri": "file:///home/z10n0101/IdeaProjects/WebGoat/webwolf/src/test/java/org/owasp/webwolf/user/UserValidatorTest.java"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        validUserForm.setMatchingPassword(\"123\");\n        validUserForm.setPassword(\"124\");\n"
                  },
                  "endLine": 62,
                  "startLine": 61
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "LOW",
            "issue_severity": "HIGH"
          },
          "hostedViewerUri": "https://sarifviewer.azurewebsites.net",
          "ruleId": "CWE-259",
          "ruleIndex": 3
        }
      ],
      "automationDetails": {
        "description": {
          "text": "Static Analysis Security Test results using @AppThreat/sast-scan"
        },
        "guid": "3e3e1a19-2907-4b78-be57-eefc633d350c"
      },
      "versionControlProvenance": [
        {
          "branch": "develop",
          "repositoryUri": "https://github.com/z10n0101/WebGoat",
          "revisionId": "3bc009297e49975ec753d66e8da5c27a96816d2f"
        }
      ]
    }
  ],
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "inlineExternalProperties": [
    {
      "guid": "3e3e1a19-2907-4b78-be57-eefc633d350c",
      "runGuid": "3f2b82c7-2fa6-4cd1-af65-a129cefa8e32"
    }
  ]
}
